CREATE OR REPLACE FUNCTION dbo.if_Adjuster(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,ADJUSTER VARCHAR(25)
		,FIRSTNAME VARCHAR(20)
		,LASTNAME VARCHAR(20)
		,MINITIAL VARCHAR(1)
		,TITLE VARCHAR(20)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(20)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,PHONENUMEXT VARCHAR(10)
		,FAXNUM VARCHAR(20)
		,EMAIL VARCHAR(128)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.ADJUSTER
		,T.FIRSTNAME
		,T.LASTNAME
		,T.MINITIAL
		,T.TITLE
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.PHONENUMEXT
		,T.FAXNUM
		,T.EMAIL
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.Adjuster T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ADJUSTER,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Adjuster
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ADJUSTER) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.ADJUSTER = S.ADJUSTER
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_AdjusterPendGroup(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,ADJUSTER VARCHAR(25)
		,PENDGROUPCODE VARCHAR(12) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.ADJUSTER
		,T.PENDGROUPCODE
FROM src.AdjusterPendGroup T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ADJUSTER,
		PENDGROUPCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.AdjusterPendGroup
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ADJUSTER,
		PENDGROUPCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.ADJUSTER = S.ADJUSTER
	AND T.PENDGROUPCODE = S.PENDGROUPCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Attorney(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,ATTORNEYSEQ NUMBER(19,0)
		,TIN VARCHAR(9)
		,TINSUFFIX VARCHAR(6)
		,EXTERNALID VARCHAR(30)
		,NAME VARCHAR(50)
		,GROUPCODE VARCHAR(5)
		,LICENSENUM VARCHAR(30)
		,MEDICARENUM VARCHAR(20)
		,PRACTICEADDRESSSEQ NUMBER(10,0)
		,BILLINGADDRESSSEQ NUMBER(10,0)
		,ATTORNEYTYPE VARCHAR(3)
		,SPECIALTY1 VARCHAR(8)
		,SPECIALTY2 VARCHAR(8)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,STATUS VARCHAR(1)
		,EXTERNALSTATUS VARCHAR(1)
		,EXPORTDATE DATETIME
		,SSNTININDICATOR VARCHAR(1)
		,PMTDAYS NUMBER(5,0)
		,AUTHBEGINDATE DATETIME
		,AUTHENDDATE DATETIME
		,TAXADDRESSSEQ NUMBER(10,0)
		,CTRLNUM1099 VARCHAR(4)
		,SURCHARGECODE VARCHAR(1)
		,WORKCOMPNUM VARCHAR(18)
		,WORKCOMPSTATE VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.ATTORNEYSEQ
		,T.TIN
		,T.TINSUFFIX
		,T.EXTERNALID
		,T.NAME
		,T.GROUPCODE
		,T.LICENSENUM
		,T.MEDICARENUM
		,T.PRACTICEADDRESSSEQ
		,T.BILLINGADDRESSSEQ
		,T.ATTORNEYTYPE
		,T.SPECIALTY1
		,T.SPECIALTY2
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.STATUS
		,T.EXTERNALSTATUS
		,T.EXPORTDATE
		,T.SSNTININDICATOR
		,T.PMTDAYS
		,T.AUTHBEGINDATE
		,T.AUTHENDDATE
		,T.TAXADDRESSSEQ
		,T.CTRLNUM1099
		,T.SURCHARGECODE
		,T.WORKCOMPNUM
		,T.WORKCOMPSTATE
FROM src.Attorney T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ATTORNEYSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Attorney
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ATTORNEYSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.ATTORNEYSEQ = S.ATTORNEYSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_AttorneyAddress(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,ATTORNEYADDRESSSEQ NUMBER(10,0)
		,RECTYPE VARCHAR(2)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(30)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,FAXNUM VARCHAR(20)
		,CONTACTFIRSTNAME VARCHAR(20)
		,CONTACTLASTNAME VARCHAR(20)
		,CONTACTMIDDLEINITIAL VARCHAR(1)
		,URFIRSTNAME VARCHAR(20)
		,URLASTNAME VARCHAR(20)
		,URMIDDLEINITIAL VARCHAR(1)
		,FACILITYNAME VARCHAR(30)
		,COUNTRYCODE VARCHAR(3)
		,MAILCODE VARCHAR(20) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.ATTORNEYADDRESSSEQ
		,T.RECTYPE
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.FAXNUM
		,T.CONTACTFIRSTNAME
		,T.CONTACTLASTNAME
		,T.CONTACTMIDDLEINITIAL
		,T.URFIRSTNAME
		,T.URLASTNAME
		,T.URMIDDLEINITIAL
		,T.FACILITYNAME
		,T.COUNTRYCODE
		,T.MAILCODE
FROM src.AttorneyAddress T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ATTORNEYADDRESSSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.AttorneyAddress
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		ATTORNEYADDRESSSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.ATTORNEYADDRESSSEQ = S.ATTORNEYADDRESSSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Bill(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,CLAIMSEQ NUMBER(10,0)
		,CLAIMSYSSUBSET VARCHAR(4)
		,PROVIDERSEQ NUMBER(19,0)
		,PROVIDERSUBSET VARCHAR(4)
		,POSTDATE DATETIME
		,DOSFIRST DATETIME
		,INVOICED VARCHAR(1)
		,INVOICEDPPO VARCHAR(1)
		,CREATEUSERID VARCHAR(2)
		,CARRIERSEQNEW VARCHAR(30)
		,DOCCTRLTYPE VARCHAR(2)
		,DOSLAST DATETIME
		,PPONETWORKID VARCHAR(2)
		,POS VARCHAR(2)
		,PROVTYPE VARCHAR(3)
		,PROVSPECIALTY1 VARCHAR(8)
		,PROVZIP VARCHAR(9)
		,PROVSTATE VARCHAR(2)
		,SUBMITDATE DATETIME
		,PROVINVOICE VARCHAR(14)
		,REGION NUMBER(5,0)
		,HOSPITALSEQ NUMBER(10,0)
		,MODUSERID VARCHAR(2)
		,STATUS NUMBER(5,0)
		,STATUSPRIOR NUMBER(5,0)
		,BILLABLELINES NUMBER(5,0)
		,TOTALCHARGE NUMBER(19,4)
		,BRREDUCTION NUMBER(19,4)
		,BRFEE NUMBER(19,4)
		,TOTALALLOW NUMBER(19,4)
		,TOTALFEE NUMBER(19,4)
		,DUPCLIENTCODE VARCHAR(4)
		,DUPBILLSEQ NUMBER(10,0)
		,FUPSTARTDATE DATETIME
		,FUPENDDATE DATETIME
		,SENDBACKMSG1SITECODE VARCHAR(3)
		,SENDBACKMSG1 VARCHAR(6)
		,SENDBACKMSG2SITECODE VARCHAR(3)
		,SENDBACKMSG2 VARCHAR(6)
		,PPOREDUCTION NUMBER(19,4)
		,PPOPRC NUMBER(5,0)
		,PPOCONTRACTID VARCHAR(30)
		,PPOSTATUS VARCHAR(1)
		,PPOFEE NUMBER(19,4)
		,NGDREDUCTION NUMBER(19,4)
		,NGDFEE NUMBER(19,4)
		,URFEE NUMBER(19,4)
		,OTHERDATA VARCHAR(30)
		,EXTERNALSTATUS VARCHAR(1)
		,URFLAG VARCHAR(1)
		,VISITS NUMBER(5,0)
		,TOS VARCHAR(2)
		,TOB VARCHAR(1)
		,SUBPRODUCTCODE VARCHAR(1)
		,FORCEPAY VARCHAR(1)
		,PMTAUTH VARCHAR(4)
		,FLOWSTATUS VARCHAR(1)
		,CONSULTDATE DATETIME
		,RCVDDATE DATETIME
		,ADMISSIONTYPE VARCHAR(1)
		,PAIDDATE DATETIME
		,ADMITDATE DATETIME
		,DISCHARGEDATE DATETIME
		,TXBILLTYPE VARCHAR(1)
		,RCVDBRDATE DATETIME
		,DUEDATE DATETIME
		,ADJUSTER VARCHAR(25)
		,DOI DATETIME
		,RETCTRLFLG VARCHAR(1)
		,RETCTRLNUM VARCHAR(9)
		,SITECODE VARCHAR(3)
		,SOURCEID VARCHAR(2)
		,CASETYPE VARCHAR(1)
		,SUBPRODUCTID VARCHAR(30)
		,SUBPRODUCTPRICE NUMBER(19,4)
		,URREDUCTION NUMBER(19,4)
		,PROVLICENSENUM VARCHAR(30)
		,PROVMEDICARENUM VARCHAR(20)
		,PROVSPECIALTY2 VARCHAR(8)
		,PMTEXPORTDATE DATETIME
		,PMTACCEPTDATE DATETIME
		,CLIENTTOB VARCHAR(5)
		,BRFEENET NUMBER(19,4)
		,PPOFEENET NUMBER(19,4)
		,NGDFEENET NUMBER(19,4)
		,URFEENET NUMBER(19,4)
		,SUBPRODUCTPRICENET NUMBER(19,4)
		,BILLSEQNEWREV NUMBER(10,0)
		,BILLSEQORGREV NUMBER(10,0)
		,VOCPLANSEQ NUMBER(5,0)
		,REVIEWDATE DATETIME
		,AUDITDATE DATETIME
		,REEVALALLOW NUMBER(19,4)
		,CHECKNUM VARCHAR(30)
		,NEGOTYPE VARCHAR(2)
		,DISCHARGEHOUR VARCHAR(2)
		,UB92TOB VARCHAR(3)
		,MCO VARCHAR(10)
		,DRG VARCHAR(3)
		,PATIENTACCOUNT VARCHAR(20)
		,EXAMINERREVFLAG VARCHAR(1)
		,REFPROVNAME VARCHAR(40)
		,PAIDAMOUNT NUMBER(19,4)
		,ADMISSIONSOURCE VARCHAR(1)
		,ADMITHOUR VARCHAR(2)
		,PATIENTSTATUS VARCHAR(2)
		,DRGVALUE NUMBER(19,4)
		,COMPANYSEQ NUMBER(5,0)
		,TOTALCOPAY NUMBER(19,4)
		,UB92PROCMETHOD VARCHAR(1)
		,TOTALDEDUCTIBLE NUMBER(19,4)
		,POLICYCOPAYAMOUNT NUMBER(19,4)
		,POLICYCOPAYPCT NUMBER(5,0)
		,DOCCTRLID VARCHAR(50)
		,RESOURCEUTILGROUP VARCHAR(4)
		,POLICYDEDUCTIBLE NUMBER(19,4)
		,POLICYLIMIT NUMBER(19,4)
		,POLICYTIMELIMIT NUMBER(5,0)
		,POLICYWARNINGPCT NUMBER(5,0)
		,APPBENEFITS VARCHAR(1)
		,APPASSIGNEE VARCHAR(1)
		,CREATEDATE DATETIME
		,MODDATE DATETIME
		,INCREMENTVALUE NUMBER(5,0)
		,ADJVERIFREQUESTDATE DATETIME
		,ADJVERIFRCVDDATE DATETIME
		,RENDERINGPROVLASTNAME VARCHAR(35)
		,RENDERINGPROVFIRSTNAME VARCHAR(25)
		,RENDERINGPROVMIDDLENAME VARCHAR(25)
		,RENDERINGPROVSUFFIX VARCHAR(10)
		,REREVIEWCOUNT NUMBER(5,0)
		,DRGBILLED VARCHAR(3)
		,DRGCALCULATED VARCHAR(3)
		,PROVRXLICENSENUM VARCHAR(30)
		,PROVSIGONFILE VARCHAR(1)
		,REFPROVFIRSTNAME VARCHAR(30)
		,REFPROVMIDDLENAME VARCHAR(25)
		,REFPROVSUFFIX VARCHAR(10)
		,REFPROVDEANUM VARCHAR(9)
		,SENDBACKMSG1SUBSET VARCHAR(2)
		,SENDBACKMSG2SUBSET VARCHAR(2)
		,PPONETWORKJURISDICTIONIND VARCHAR(1)
		,MANUALREDUCTIONMODE NUMBER(5,0)
		,WHOLESALESALESTAXZIP VARCHAR(9)
		,RETAILSALESTAXZIP VARCHAR(9)
		,PPONETWORKJURISDICTIONINSURERSEQ NUMBER(10,0)
		,INVOICEDWHOLESALE VARCHAR(1)
		,INVOICEDPPOWHOLESALE VARCHAR(1)
		,ADMITTINGDXREF NUMBER(5,0)
		,ADMITTINGDXCODE VARCHAR(8)
		,PROVFACILITYNPI VARCHAR(10)
		,PROVBILLINGNPI VARCHAR(10)
		,PROVRENDERINGNPI VARCHAR(10)
		,PROVOPERATINGNPI VARCHAR(10)
		,PROVREFERRINGNPI VARCHAR(10)
		,PROVOTHER1NPI VARCHAR(10)
		,PROVOTHER2NPI VARCHAR(10)
		,PROVOPERATINGLICENSENUM VARCHAR(30)
		,EHUBID VARCHAR(50)
		,OTHERBILLINGPROVIDERSUBSET VARCHAR(4)
		,OTHERBILLINGPROVIDERSEQ NUMBER(19,0)
		,RESUBMISSIONREASONCODE VARCHAR(2)
		,CONTRACTTYPE VARCHAR(2)
		,CONTRACTAMOUNT NUMBER(19,4)
		,PRIORAUTHREFERRALNUM1 VARCHAR(30)
		,PRIORAUTHREFERRALNUM2 VARCHAR(30)
		,DRGCOMPOSITEFACTOR NUMBER(19,4)
		,DRGDISCHARGEFRACTION NUMBER(19,4)
		,DRGINPATIENTMULTIPLIER NUMBER(19,4)
		,DRGWEIGHT NUMBER(19,4)
		,EFTPMTMETHODCODE VARCHAR(3)
		,EFTPMTFORMATCODE VARCHAR(10)
		,EFTSENDERDFIID VARCHAR(27)
		,EFTSENDERACCTNUM VARCHAR(50)
		,EFTORIGCOSUPPLCODE VARCHAR(24)
		,EFTRECEIVERDFIID VARCHAR(27)
		,EFTRECEIVERACCTQUAL VARCHAR(3)
		,EFTRECEIVERACCTNUM VARCHAR(50)
		,POLICYLIMITRESULT VARCHAR(1)
		,HISTORYBATCHNUMBER NUMBER(10,0)
		,PROVBILLINGTAXONOMY VARCHAR(11)
		,PROVFACILITYTAXONOMY VARCHAR(11)
		,PROVRENDERINGTAXONOMY VARCHAR(11)
		,PPOSTACKLIST VARCHAR(255)
		,ICDVERSION NUMBER(5,0)
		,ODGFLAG NUMBER(5,0)
		,PROVBILLLICENSENUM VARCHAR(30)
		,PROVFACILITYLICENSENUM VARCHAR(30)
		,PROVVENDOREXTERNALID VARCHAR(30)
		,BRACTUALCLIENTCODE VARCHAR(4)
		,BROVERRIDECLIENTCODE VARCHAR(4)
		,BILLREEVALREASONCODE VARCHAR(30)
		,PAYMENTCLEAREDDATE DATETIME
		,ESTIMATEDBRCLIENTCODE VARCHAR(4)
		,ESTIMATEDBRJURIS VARCHAR(2)
		,OVERRIDEFEECONTROLRETAIL VARCHAR(4)
		,OVERRIDEFEECONTROLWHOLESALE VARCHAR(4) 
		,STATEMENTFROMDATE DATETIME
		,STATEMENTTHROUGHDATE DATETIME)
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.CLAIMSEQ
		,T.CLAIMSYSSUBSET
		,T.PROVIDERSEQ
		,T.PROVIDERSUBSET
		,T.POSTDATE
		,T.DOSFIRST
		,T.INVOICED
		,T.INVOICEDPPO
		,T.CREATEUSERID
		,T.CARRIERSEQNEW
		,T.DOCCTRLTYPE
		,T.DOSLAST
		,T.PPONETWORKID
		,T.POS
		,T.PROVTYPE
		,T.PROVSPECIALTY1
		,T.PROVZIP
		,T.PROVSTATE
		,T.SUBMITDATE
		,T.PROVINVOICE
		,T.REGION
		,T.HOSPITALSEQ
		,T.MODUSERID
		,T.STATUS
		,T.STATUSPRIOR
		,T.BILLABLELINES
		,T.TOTALCHARGE
		,T.BRREDUCTION
		,T.BRFEE
		,T.TOTALALLOW
		,T.TOTALFEE
		,T.DUPCLIENTCODE
		,T.DUPBILLSEQ
		,T.FUPSTARTDATE
		,T.FUPENDDATE
		,T.SENDBACKMSG1SITECODE
		,T.SENDBACKMSG1
		,T.SENDBACKMSG2SITECODE
		,T.SENDBACKMSG2
		,T.PPOREDUCTION
		,T.PPOPRC
		,T.PPOCONTRACTID
		,T.PPOSTATUS
		,T.PPOFEE
		,T.NGDREDUCTION
		,T.NGDFEE
		,T.URFEE
		,T.OTHERDATA
		,T.EXTERNALSTATUS
		,T.URFLAG
		,T.VISITS
		,T.TOS
		,T.TOB
		,T.SUBPRODUCTCODE
		,T.FORCEPAY
		,T.PMTAUTH
		,T.FLOWSTATUS
		,T.CONSULTDATE
		,T.RCVDDATE
		,T.ADMISSIONTYPE
		,T.PAIDDATE
		,T.ADMITDATE
		,T.DISCHARGEDATE
		,T.TXBILLTYPE
		,T.RCVDBRDATE
		,T.DUEDATE
		,T.ADJUSTER
		,T.DOI
		,T.RETCTRLFLG
		,T.RETCTRLNUM
		,T.SITECODE
		,T.SOURCEID
		,T.CASETYPE
		,T.SUBPRODUCTID
		,T.SUBPRODUCTPRICE
		,T.URREDUCTION
		,T.PROVLICENSENUM
		,T.PROVMEDICARENUM
		,T.PROVSPECIALTY2
		,T.PMTEXPORTDATE
		,T.PMTACCEPTDATE
		,T.CLIENTTOB
		,T.BRFEENET
		,T.PPOFEENET
		,T.NGDFEENET
		,T.URFEENET
		,T.SUBPRODUCTPRICENET
		,T.BILLSEQNEWREV
		,T.BILLSEQORGREV
		,T.VOCPLANSEQ
		,T.REVIEWDATE
		,T.AUDITDATE
		,T.REEVALALLOW
		,T.CHECKNUM
		,T.NEGOTYPE
		,T.DISCHARGEHOUR
		,T.UB92TOB
		,T.MCO
		,T.DRG
		,T.PATIENTACCOUNT
		,T.EXAMINERREVFLAG
		,T.REFPROVNAME
		,T.PAIDAMOUNT
		,T.ADMISSIONSOURCE
		,T.ADMITHOUR
		,T.PATIENTSTATUS
		,T.DRGVALUE
		,T.COMPANYSEQ
		,T.TOTALCOPAY
		,T.UB92PROCMETHOD
		,T.TOTALDEDUCTIBLE
		,T.POLICYCOPAYAMOUNT
		,T.POLICYCOPAYPCT
		,T.DOCCTRLID
		,T.RESOURCEUTILGROUP
		,T.POLICYDEDUCTIBLE
		,T.POLICYLIMIT
		,T.POLICYTIMELIMIT
		,T.POLICYWARNINGPCT
		,T.APPBENEFITS
		,T.APPASSIGNEE
		,T.CREATEDATE
		,T.MODDATE
		,T.INCREMENTVALUE
		,T.ADJVERIFREQUESTDATE
		,T.ADJVERIFRCVDDATE
		,T.RENDERINGPROVLASTNAME
		,T.RENDERINGPROVFIRSTNAME
		,T.RENDERINGPROVMIDDLENAME
		,T.RENDERINGPROVSUFFIX
		,T.REREVIEWCOUNT
		,T.DRGBILLED
		,T.DRGCALCULATED
		,T.PROVRXLICENSENUM
		,T.PROVSIGONFILE
		,T.REFPROVFIRSTNAME
		,T.REFPROVMIDDLENAME
		,T.REFPROVSUFFIX
		,T.REFPROVDEANUM
		,T.SENDBACKMSG1SUBSET
		,T.SENDBACKMSG2SUBSET
		,T.PPONETWORKJURISDICTIONIND
		,T.MANUALREDUCTIONMODE
		,T.WHOLESALESALESTAXZIP
		,T.RETAILSALESTAXZIP
		,T.PPONETWORKJURISDICTIONINSURERSEQ
		,T.INVOICEDWHOLESALE
		,T.INVOICEDPPOWHOLESALE
		,T.ADMITTINGDXREF
		,T.ADMITTINGDXCODE
		,T.PROVFACILITYNPI
		,T.PROVBILLINGNPI
		,T.PROVRENDERINGNPI
		,T.PROVOPERATINGNPI
		,T.PROVREFERRINGNPI
		,T.PROVOTHER1NPI
		,T.PROVOTHER2NPI
		,T.PROVOPERATINGLICENSENUM
		,T.EHUBID
		,T.OTHERBILLINGPROVIDERSUBSET
		,T.OTHERBILLINGPROVIDERSEQ
		,T.RESUBMISSIONREASONCODE
		,T.CONTRACTTYPE
		,T.CONTRACTAMOUNT
		,T.PRIORAUTHREFERRALNUM1
		,T.PRIORAUTHREFERRALNUM2
		,T.DRGCOMPOSITEFACTOR
		,T.DRGDISCHARGEFRACTION
		,T.DRGINPATIENTMULTIPLIER
		,T.DRGWEIGHT
		,T.EFTPMTMETHODCODE
		,T.EFTPMTFORMATCODE
		,T.EFTSENDERDFIID
		,T.EFTSENDERACCTNUM
		,T.EFTORIGCOSUPPLCODE
		,T.EFTRECEIVERDFIID
		,T.EFTRECEIVERACCTQUAL
		,T.EFTRECEIVERACCTNUM
		,T.POLICYLIMITRESULT
		,T.HISTORYBATCHNUMBER
		,T.PROVBILLINGTAXONOMY
		,T.PROVFACILITYTAXONOMY
		,T.PROVRENDERINGTAXONOMY
		,T.PPOSTACKLIST
		,T.ICDVERSION
		,T.ODGFLAG
		,T.PROVBILLLICENSENUM
		,T.PROVFACILITYLICENSENUM
		,T.PROVVENDOREXTERNALID
		,T.BRACTUALCLIENTCODE
		,T.BROVERRIDECLIENTCODE
		,T.BILLREEVALREASONCODE
		,T.PAYMENTCLEAREDDATE
		,T.ESTIMATEDBRCLIENTCODE
		,T.ESTIMATEDBRJURIS
		,T.OVERRIDEFEECONTROLRETAIL
		,T.OVERRIDEFEECONTROLWHOLESALE
		,T.STATEMENTFROMDATE
		,T.STATEMENTTHROUGHDATE
FROM src.Bill T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Bill
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillControl(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLCONTROLSEQ NUMBER(5,0)
		,MODDATE DATETIME
		,CREATEDATE DATETIME
		,CONTROL VARCHAR(1)
		,EXTERNALID VARCHAR(50)
		,BATCHNUMBER NUMBER(19,0)
		,MODUSERID VARCHAR(2)
		,EXTERNALID2 VARCHAR(50)
		,MESSAGE VARCHAR(500) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLCONTROLSEQ
		,T.MODDATE
		,T.CREATEDATE
		,T.CONTROL
		,T.EXTERNALID
		,T.BATCHNUMBER
		,T.MODUSERID
		,T.EXTERNALID2
		,T.MESSAGE
FROM src.BillControl T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLCONTROLSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillControl
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLCONTROLSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLCONTROLSEQ = S.BILLCONTROLSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillControlHistory(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,BILLCONTROLHISTORYSEQ NUMBER(19,0)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLCONTROLSEQ NUMBER(5,0)
		,CREATEDATE DATETIME
		,CONTROL VARCHAR(1)
		,EXTERNALID VARCHAR(50)
		,EDIBATCHLOGSEQ NUMBER(19,0)
		,DELETED BOOLEAN
		,MODUSERID VARCHAR(2)
		,EXTERNALID2 VARCHAR(50)
		,MESSAGE VARCHAR(500) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.BILLCONTROLHISTORYSEQ
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLCONTROLSEQ
		,T.CREATEDATE
		,T.CONTROL
		,T.EXTERNALID
		,T.EDIBATCHLOGSEQ
		,T.DELETED
		,T.MODUSERID
		,T.EXTERNALID2
		,T.MESSAGE
FROM src.BillControlHistory T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		BILLCONTROLHISTORYSEQ,
		CLIENTCODE,
		BILLSEQ,
		BILLCONTROLSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillControlHistory
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		BILLCONTROLHISTORYSEQ,
		CLIENTCODE,
		BILLSEQ,
		BILLCONTROLSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.BILLCONTROLHISTORYSEQ = S.BILLCONTROLHISTORYSEQ
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLCONTROLSEQ = S.BILLCONTROLSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillData(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,TYPECODE VARCHAR(6)
		,SUBTYPE VARCHAR(12)
		,SUBSEQ NUMBER(5,0)
		,NUMDATA NUMBER(18,6)
		,TEXTDATA VARCHAR(6000)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.TYPECODE
		,T.SUBTYPE
		,T.SUBSEQ
		,T.NUMDATA
		,T.TEXTDATA
		,T.MODDATE
		,T.MODUSERID
		,T.CREATEDATE
		,T.CREATEUSERID
FROM src.BillData T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		TYPECODE,
		SUBTYPE,
		SUBSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillData
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		TYPECODE,
		SUBTYPE,
		SUBSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.TYPECODE = S.TYPECODE
	AND T.SUBTYPE = S.SUBTYPE
	AND T.SUBSEQ = S.SUBSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillFee(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,FEETYPE VARCHAR(1)
		,TRANSACTIONTYPE VARCHAR(6)
		,FEECTRLSOURCE VARCHAR(1)
		,FEECONTROLSEQ NUMBER(10,0)
		,FEEAMOUNT NUMBER(19,4)
		,INVOICESEQ NUMBER(19,0)
		,INVOICESUBSEQ NUMBER(5,0)
		,PPONETWORKID VARCHAR(2)
		,REDUCTIONCODE NUMBER(5,0)
		,FEEOVERRIDE VARCHAR(1)
		,OVERRIDEVERIFIED VARCHAR(1)
		,EXCLUSIVEFEE VARCHAR(1)
		,FEESOURCEID VARCHAR(20)
		,HANDLINGFEE VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.FEETYPE
		,T.TRANSACTIONTYPE
		,T.FEECTRLSOURCE
		,T.FEECONTROLSEQ
		,T.FEEAMOUNT
		,T.INVOICESEQ
		,T.INVOICESUBSEQ
		,T.PPONETWORKID
		,T.REDUCTIONCODE
		,T.FEEOVERRIDE
		,T.OVERRIDEVERIFIED
		,T.EXCLUSIVEFEE
		,T.FEESOURCEID
		,T.HANDLINGFEE
FROM src.BillFee T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		FEETYPE,
		TRANSACTIONTYPE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillFee
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		FEETYPE,
		TRANSACTIONTYPE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.FEETYPE = S.FEETYPE
	AND T.TRANSACTIONTYPE = S.TRANSACTIONTYPE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillICD(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLICDSEQ NUMBER(5,0)
		,CODETYPE VARCHAR(1)
		,ICDCODE VARCHAR(8)
		,CODEDATE DATETIME
		,POA VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLICDSEQ
		,T.CODETYPE
		,T.ICDCODE
		,T.CODEDATE
		,T.POA
FROM src.BillICD T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLICDSEQ,
		CODETYPE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillICD
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLICDSEQ,
		CODETYPE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLICDSEQ = S.BILLICDSEQ
	AND T.CODETYPE = S.CODETYPE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillICDDiagnosis(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLDIAGNOSISSEQ NUMBER(5,0)
		,ICDDIAGNOSISID NUMBER(10,0)
		,POA VARCHAR(1)
		,BILLEDICDDIAGNOSIS VARCHAR(8)
		,ICDBILLUSAGETYPEID NUMBER(5,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLDIAGNOSISSEQ
		,T.ICDDIAGNOSISID
		,T.POA
		,T.BILLEDICDDIAGNOSIS
		,T.ICDBILLUSAGETYPEID
FROM src.BillICDDiagnosis T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLDIAGNOSISSEQ,
		ICDBILLUSAGETYPEID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillICDDiagnosis
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLDIAGNOSISSEQ,
		ICDBILLUSAGETYPEID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLDIAGNOSISSEQ = S.BILLDIAGNOSISSEQ
	AND T.ICDBILLUSAGETYPEID = S.ICDBILLUSAGETYPEID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillICDProcedure(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLPROCEDURESEQ NUMBER(5,0)
		,ICDPROCEDUREID NUMBER(10,0)
		,CODEDATE DATETIME
		,BILLEDICDPROCEDURE VARCHAR(8)
		,ICDBILLUSAGETYPEID NUMBER(5,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLPROCEDURESEQ
		,T.ICDPROCEDUREID
		,T.CODEDATE
		,T.BILLEDICDPROCEDURE
		,T.ICDBILLUSAGETYPEID
FROM src.BillICDProcedure T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLPROCEDURESEQ,
		ICDBILLUSAGETYPEID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillICDProcedure
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLPROCEDURESEQ,
		ICDBILLUSAGETYPEID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLPROCEDURESEQ = S.BILLPROCEDURESEQ
	AND T.ICDBILLUSAGETYPEID = S.ICDBILLUSAGETYPEID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillPPORate(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,LINKNAME VARCHAR(12)
		,RATETYPE VARCHAR(8)
		,APPLIED VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.LINKNAME
		,T.RATETYPE
		,T.APPLIED
FROM src.BillPPORate T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINKNAME,
		RATETYPE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillPPORate
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINKNAME,
		RATETYPE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.LINKNAME = S.LINKNAME
	AND T.RATETYPE = S.RATETYPE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillProvider(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,BILLPROVIDERSEQ NUMBER(10,0)
		,QUALIFIER VARCHAR(2)
		,LASTNAME VARCHAR(40)
		,FIRSTNAME VARCHAR(30)
		,MIDDLENAME VARCHAR(25)
		,SUFFIX VARCHAR(10)
		,NPI VARCHAR(10)
		,LICENSENUM VARCHAR(30)
		,DEANUM VARCHAR(9) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.BILLPROVIDERSEQ
		,T.QUALIFIER
		,T.LASTNAME
		,T.FIRSTNAME
		,T.MIDDLENAME
		,T.SUFFIX
		,T.NPI
		,T.LICENSENUM
		,T.DEANUM
FROM src.BillProvider T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLPROVIDERSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillProvider
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		BILLPROVIDERSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.BILLPROVIDERSEQ = S.BILLPROVIDERSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillReevalReason(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,BILLREEVALREASONCODE VARCHAR(30)
		,SITECODE VARCHAR(3)
		,BILLREEVALREASONCATEGORYSEQ NUMBER(10,0)
		,SHORTDESCRIPTION VARCHAR(40)
		,LONGDESCRIPTION VARCHAR(255)
		,ACTIVE BOOLEAN
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.BILLREEVALREASONCODE
		,T.SITECODE
		,T.BILLREEVALREASONCATEGORYSEQ
		,T.SHORTDESCRIPTION
		,T.LONGDESCRIPTION
		,T.ACTIVE
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.BillReevalReason T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		BILLREEVALREASONCODE,
		SITECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillReevalReason
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		BILLREEVALREASONCODE,
		SITECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.BILLREEVALREASONCODE = S.BILLREEVALREASONCODE
	AND T.SITECODE = S.SITECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BillRuleFire(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,LINESEQ NUMBER(5,0)
		,RULEID VARCHAR(5)
		,RULETYPE VARCHAR(1)
		,DATERULEFIRED DATETIME
		,VALIDATED VARCHAR(1)
		,VALIDATEDUSERID VARCHAR(2)
		,DATEVALIDATED DATETIME
		,PENDTOID VARCHAR(13)
		,RULESEVERITY VARCHAR(1)
		,WFTASKSEQ NUMBER(10,0)
		,CHILDTARGETSUBSET VARCHAR(4)
		,CHILDTARGETSEQ NUMBER(10,0)
		,CAPSTONERULEID NUMBER(10,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.LINESEQ
		,T.RULEID
		,T.RULETYPE
		,T.DATERULEFIRED
		,T.VALIDATED
		,T.VALIDATEDUSERID
		,T.DATEVALIDATED
		,T.PENDTOID
		,T.RULESEVERITY
		,T.WFTASKSEQ
		,T.CHILDTARGETSUBSET
		,T.CHILDTARGETSEQ
		,T.CAPSTONERULEID
FROM src.BillRuleFire T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		RULEID,
		CHILDTARGETSUBSET,
		CHILDTARGETSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BillRuleFire
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		RULEID,
		CHILDTARGETSUBSET,
		CHILDTARGETSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.LINESEQ = S.LINESEQ
	AND T.RULEID = S.RULEID
	AND T.CHILDTARGETSUBSET = S.CHILDTARGETSUBSET
	AND T.CHILDTARGETSEQ = S.CHILDTARGETSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Branch(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,BRANCHSEQ NUMBER(10,0)
		,NAME VARCHAR(60)
		,EXTERNALID VARCHAR(20)
		,BRANCHID VARCHAR(20)
		,LOCATIONCODE VARCHAR(10)
		,ADMINKEY VARCHAR(40)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(20)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,FAXNUM VARCHAR(20)
		,CONTACTNAME VARCHAR(30)
		,TIN VARCHAR(9)
		,STATETAXID VARCHAR(30)
		,DIRNUM VARCHAR(20)
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,RULEFIRE VARCHAR(4)
		,FEERATECNTRLEX VARCHAR(4)
		,FEERATECNTRLIN VARCHAR(4)
		,SALESTAXEXEMPT VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,TERMINATIONDATE DATETIME )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.BRANCHSEQ
		,T.NAME
		,T.EXTERNALID
		,T.BRANCHID
		,T.LOCATIONCODE
		,T.ADMINKEY
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.FAXNUM
		,T.CONTACTNAME
		,T.TIN
		,T.STATETAXID
		,T.DIRNUM
		,T.MODUSERID
		,T.MODDATE
		,T.RULEFIRE
		,T.FEERATECNTRLEX
		,T.FEERATECNTRLIN
		,T.SALESTAXEXEMPT
		,T.EFFECTIVEDATE
		,T.TERMINATIONDATE
FROM src.Branch T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		BRANCHSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Branch
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		BRANCHSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.BRANCHSEQ = S.BRANCHSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_BRERuleCategory(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,BRERULECATEGORYID VARCHAR(30)
		,CATEGORYDESCRIPTION VARCHAR(500) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.BRERULECATEGORYID
		,T.CATEGORYDESCRIPTION
FROM src.BRERuleCategory T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		BRERULECATEGORYID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.BRERuleCategory
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		BRERULECATEGORYID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.BRERULECATEGORYID = S.BRERULECATEGORYID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_CityStateZip(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ZIPCODE VARCHAR(5)
		,CTYSTKEY VARCHAR(6)
		,CPYDTLCODE VARCHAR(1)
		,ZIPCLSCODE VARCHAR(1)
		,CTYSTNAME VARCHAR(28)
		,CTYSTNAMEABV VARCHAR(13)
		,CTYSTFACCODE VARCHAR(1)
		,CTYSTMAILIND VARCHAR(1)
		,PRELSTCTYKEY VARCHAR(6)
		,PRELSTCTYNME VARCHAR(28)
		,CTYDLVIND VARCHAR(1)
		,AUTZONEIND VARCHAR(1)
		,UNQZIPIND VARCHAR(1)
		,FINANCENUM VARCHAR(6)
		,STATEABBRV VARCHAR(2)
		,COUNTYNUM VARCHAR(3)
		,COUNTYNAME VARCHAR(25) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ZIPCODE
		,T.CTYSTKEY
		,T.CPYDTLCODE
		,T.ZIPCLSCODE
		,T.CTYSTNAME
		,T.CTYSTNAMEABV
		,T.CTYSTFACCODE
		,T.CTYSTMAILIND
		,T.PRELSTCTYKEY
		,T.PRELSTCTYNME
		,T.CTYDLVIND
		,T.AUTZONEIND
		,T.UNQZIPIND
		,T.FINANCENUM
		,T.STATEABBRV
		,T.COUNTYNUM
		,T.COUNTYNAME
FROM src.CityStateZip T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ZIPCODE,
		CTYSTKEY,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.CityStateZip
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ZIPCODE,
		CTYSTKEY) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ZIPCODE = S.ZIPCODE
	AND T.CTYSTKEY = S.CTYSTKEY
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Claim(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMSEQ NUMBER(10,0)
		,CLAIMID VARCHAR(35)
		,DOI DATETIME
		,PATIENTSSN VARCHAR(9)
		,PATIENTFIRSTNAME VARCHAR(10)
		,PATIENTLASTNAME VARCHAR(20)
		,PATIENTMINITIAL VARCHAR(1)
		,EXTERNALCLAIMID VARCHAR(35)
		,POLICYCOPAYAMOUNT NUMBER(19,4)
		,POLICYCOPAYPCT NUMBER(5,0)
		,POLICYDEDUCTIBLE NUMBER(19,4)
		,STATUS VARCHAR(1)
		,POLICYLIMIT NUMBER(19,4)
		,POLICYID VARCHAR(30)
		,POLICYTIMELIMIT NUMBER(5,0)
		,ADJUSTER VARCHAR(25)
		,POLICYLIMITWARNINGPCT NUMBER(5,0)
		,FIRSTDOS DATETIME
		,LASTDOS DATETIME
		,LOADDATE DATETIME
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,PATIENTSEX VARCHAR(1)
		,PATIENTCITY VARCHAR(20)
		,PATIENTDOB DATETIME
		,PATIENTSTREET2 VARCHAR(30)
		,PATIENTSTATE VARCHAR(2)
		,PATIENTZIP VARCHAR(9)
		,PATIENTSTREET1 VARCHAR(30)
		,MMIDATE DATETIME
		,BODYPART1 VARCHAR(3)
		,BODYPART2 VARCHAR(3)
		,BODYPART3 VARCHAR(3)
		,BODYPART4 VARCHAR(3)
		,BODYPART5 VARCHAR(3)
		,LOCATION VARCHAR(10)
		,NATUREINJ VARCHAR(3)
		,URFLAG VARCHAR(1)
		,CARKNOWDATE DATETIME
		,CLAIMTYPE VARCHAR(2)
		,CTRLDAY NUMBER(5,0)
		,MCOCHOICE VARCHAR(2)
		,CLIENTCODEDEFAULT VARCHAR(4)
		,CLOSEDATE DATETIME
		,REOPENDATE DATETIME
		,MEDCLOSEDATE DATETIME
		,MEDSTIPDATE DATETIME
		,LEGALSTATUS1 VARCHAR(2)
		,LEGALSTATUS2 VARCHAR(2)
		,LEGALSTATUS3 VARCHAR(2)
		,JURISDICTION VARCHAR(2)
		,PRODUCTCODE VARCHAR(1)
		,PLAINTIFFATTORNEYSEQ NUMBER(19,0)
		,DEFENDANTATTORNEYSEQ NUMBER(19,0)
		,BRANCHID VARCHAR(20)
		,OCCCODE VARCHAR(2)
		,CLAIMSEVERITY VARCHAR(2)
		,DATELOSTBEGAN DATETIME
		,ACCIDENTEMPLOYMENT VARCHAR(1)
		,RELATIONTOINSURED VARCHAR(1)
		,POLICY5DAYS VARCHAR(2)
		,POLICY90DAYS VARCHAR(2)
		,JOB5DAYS VARCHAR(2)
		,JOB90DAYS VARCHAR(2)
		,LOSTDAYS NUMBER(5,0)
		,ACTUALRTWDATE DATETIME
		,MCOTRANSIND VARCHAR(2)
		,QUALIFIEDINJWORKIND VARCHAR(2)
		,PERMSTATIONARYIND VARCHAR(2)
		,HOSPITALADMIT VARCHAR(2)
		,QUALIFIEDINJWORKDATE DATETIME
		,RETTOWORKDATE DATETIME
		,PERMSTATIONARYDATE DATETIME
		,MCOFEIN VARCHAR(9)
		,CREATEUSERID VARCHAR(2)
		,IDCODE VARCHAR(80)
		,IDTYPE VARCHAR(2)
		,MPNOPTOUTEFFECTIVEDATE DATETIME
		,MPNOPTOUTTERMINATIONDATE DATETIME
		,MPNOPTOUTPHYSICIANNAME VARCHAR(50)
		,MPNOPTOUTPHYSICIANTIN VARCHAR(9)
		,MPNCHOICE VARCHAR(2)
		,JURISDICTIONCLAIMID VARCHAR(35)
		,POLICYLIMITRESULT VARCHAR(1)
		,PATIENTPRIMARYPHONE VARCHAR(20)
		,PATIENTWORKPHONE VARCHAR(20)
		,PATIENTALTERNATEPHONE VARCHAR(20)
		,ICDVERSION NUMBER(5,0)
		,LASTDATEOFTRAUMA DATETIME
		,CLAIMADMINCLAIMNUM VARCHAR(35)
		,PATIENTCOUNTRYCODE VARCHAR(3) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMSEQ
		,T.CLAIMID
		,T.DOI
		,T.PATIENTSSN
		,T.PATIENTFIRSTNAME
		,T.PATIENTLASTNAME
		,T.PATIENTMINITIAL
		,T.EXTERNALCLAIMID
		,T.POLICYCOPAYAMOUNT
		,T.POLICYCOPAYPCT
		,T.POLICYDEDUCTIBLE
		,T.STATUS
		,T.POLICYLIMIT
		,T.POLICYID
		,T.POLICYTIMELIMIT
		,T.ADJUSTER
		,T.POLICYLIMITWARNINGPCT
		,T.FIRSTDOS
		,T.LASTDOS
		,T.LOADDATE
		,T.MODDATE
		,T.MODUSERID
		,T.PATIENTSEX
		,T.PATIENTCITY
		,T.PATIENTDOB
		,T.PATIENTSTREET2
		,T.PATIENTSTATE
		,T.PATIENTZIP
		,T.PATIENTSTREET1
		,T.MMIDATE
		,T.BODYPART1
		,T.BODYPART2
		,T.BODYPART3
		,T.BODYPART4
		,T.BODYPART5
		,T.LOCATION
		,T.NATUREINJ
		,T.URFLAG
		,T.CARKNOWDATE
		,T.CLAIMTYPE
		,T.CTRLDAY
		,T.MCOCHOICE
		,T.CLIENTCODEDEFAULT
		,T.CLOSEDATE
		,T.REOPENDATE
		,T.MEDCLOSEDATE
		,T.MEDSTIPDATE
		,T.LEGALSTATUS1
		,T.LEGALSTATUS2
		,T.LEGALSTATUS3
		,T.JURISDICTION
		,T.PRODUCTCODE
		,T.PLAINTIFFATTORNEYSEQ
		,T.DEFENDANTATTORNEYSEQ
		,T.BRANCHID
		,T.OCCCODE
		,T.CLAIMSEVERITY
		,T.DATELOSTBEGAN
		,T.ACCIDENTEMPLOYMENT
		,T.RELATIONTOINSURED
		,T.POLICY5DAYS
		,T.POLICY90DAYS
		,T.JOB5DAYS
		,T.JOB90DAYS
		,T.LOSTDAYS
		,T.ACTUALRTWDATE
		,T.MCOTRANSIND
		,T.QUALIFIEDINJWORKIND
		,T.PERMSTATIONARYIND
		,T.HOSPITALADMIT
		,T.QUALIFIEDINJWORKDATE
		,T.RETTOWORKDATE
		,T.PERMSTATIONARYDATE
		,T.MCOFEIN
		,T.CREATEUSERID
		,T.IDCODE
		,T.IDTYPE
		,T.MPNOPTOUTEFFECTIVEDATE
		,T.MPNOPTOUTTERMINATIONDATE
		,T.MPNOPTOUTPHYSICIANNAME
		,T.MPNOPTOUTPHYSICIANTIN
		,T.MPNCHOICE
		,T.JURISDICTIONCLAIMID
		,T.POLICYLIMITRESULT
		,T.PATIENTPRIMARYPHONE
		,T.PATIENTWORKPHONE
		,T.PATIENTALTERNATEPHONE
		,T.ICDVERSION
		,T.LASTDATEOFTRAUMA
		,T.CLAIMADMINCLAIMNUM
		,T.PATIENTCOUNTRYCODE
FROM src.Claim T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Claim
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.CLAIMSEQ = S.CLAIMSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimData(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMSEQ NUMBER(10,0)
		,TYPECODE VARCHAR(6)
		,SUBTYPE VARCHAR(12)
		,SUBSEQ NUMBER(5,0)
		,NUMDATA NUMBER(18,6)
		,TEXTDATA VARCHAR(6000)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMSEQ
		,T.TYPECODE
		,T.SUBTYPE
		,T.SUBSEQ
		,T.NUMDATA
		,T.TEXTDATA
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.ClaimData T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		TYPECODE,
		SUBTYPE,
		SUBSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimData
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		TYPECODE,
		SUBTYPE,
		SUBSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.CLAIMSEQ = S.CLAIMSEQ
	AND T.TYPECODE = S.TYPECODE
	AND T.SUBTYPE = S.SUBTYPE
	AND T.SUBSEQ = S.SUBSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimDiag(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMSEQ NUMBER(10,0)
		,CLAIMDIAGSEQ NUMBER(5,0)
		,DIAGCODE VARCHAR(8) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMSEQ
		,T.CLAIMDIAGSEQ
		,T.DIAGCODE
FROM src.ClaimDiag T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		CLAIMDIAGSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimDiag
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		CLAIMDIAGSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.CLAIMSEQ = S.CLAIMSEQ
	AND T.CLAIMDIAGSEQ = S.CLAIMDIAGSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimICDDiagnosis(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMSEQ NUMBER(10,0)
		,CLAIMDIAGNOSISSEQ NUMBER(5,0)
		,ICDDIAGNOSISID NUMBER(10,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMSEQ
		,T.CLAIMDIAGNOSISSEQ
		,T.ICDDIAGNOSISID
FROM src.ClaimICDDiagnosis T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		CLAIMDIAGNOSISSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimICDDiagnosis
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		CLAIMDIAGNOSISSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.CLAIMSEQ = S.CLAIMSEQ
	AND T.CLAIMDIAGNOSISSEQ = S.CLAIMDIAGNOSISSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimInsurer(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMSEQ NUMBER(10,0)
		,INSURERTYPE VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,INSURERSEQ NUMBER(10,0)
		,TERMINATIONDATE DATETIME
		,EXTERNALPOLICYNUMBER VARCHAR(30)
		,UNITSTATCLAIMID VARCHAR(35)
		,UNITSTATPOLICYID VARCHAR(30)
		,POLICYEFFECTIVEDATE DATETIME
		,SELFINSURED VARCHAR(1)
		,CLAIMADMINCLAIMNUM VARCHAR(35) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMSEQ
		,T.INSURERTYPE
		,T.EFFECTIVEDATE
		,T.INSURERSEQ
		,T.TERMINATIONDATE
		,T.EXTERNALPOLICYNUMBER
		,T.UNITSTATCLAIMID
		,T.UNITSTATPOLICYID
		,T.POLICYEFFECTIVEDATE
		,T.SELFINSURED
		,T.CLAIMADMINCLAIMNUM
FROM src.ClaimInsurer T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		INSURERTYPE,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimInsurer
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		CLAIMSEQ,
		INSURERTYPE,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.CLAIMSEQ = S.CLAIMSEQ
	AND T.INSURERTYPE = S.INSURERTYPE
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimSys(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,CLAIMIDMASK VARCHAR(35)
		,CLAIMACCESS VARCHAR(1)
		,CLAIMSYSDESC VARCHAR(30)
		,POLICYHOLDERREQ VARCHAR(1)
		,VALIDATEBRANCH VARCHAR(1)
		,VALIDATEPOLICY VARCHAR(1)
		,LGLCODE1TABLECODE VARCHAR(2)
		,LGLCODE2TABLECODE VARCHAR(2)
		,LGLCODE3TABLECODE VARCHAR(2)
		,UROCCTABLECODE VARCHAR(2)
		,POLICY5DAYSTABLECODE VARCHAR(2)
		,POLICY90DAYSTABLECODE VARCHAR(2)
		,JOB5DAYSTABLECODE VARCHAR(2)
		,JOB90DAYSTABLECODE VARCHAR(2)
		,HCOTRANSINDTABLECODE VARCHAR(2)
		,QUALIFIEDINJWORKTABLECODE VARCHAR(2)
		,PERMSTATIONARYTABLECODE VARCHAR(2)
		,VALIDATEADJUSTER VARCHAR(1)
		,MCOPROGRAM VARCHAR(1)
		,ADJUSTERREQUIRED VARCHAR(1)
		,HOSPITALADMITTABLECODE VARCHAR(2)
		,ATTORNEYTAXADDRREQUIRED VARCHAR(1)
		,BODYPARTTABLECODE VARCHAR(2)
		,POLICYDEFAULTS VARCHAR(1)
		,POLICYCOPAYAMOUNT NUMBER(19,4)
		,POLICYCOPAYPCT NUMBER(5,0)
		,POLICYDEDUCTIBLE NUMBER(19,4)
		,POLICYLIMIT NUMBER(19,4)
		,POLICYTIMELIMIT NUMBER(5,0)
		,POLICYLIMITWARNINGPCT NUMBER(5,0)
		,RESTRICTUSERACCESS VARCHAR(1)
		,BEOVERRIDEPERMISSIONFLAG VARCHAR(1)
		,ROOTCLAIMLENGTH NUMBER(5,0)
		,RELATECLAIMSTOTALPOLICYDETAIL VARCHAR(1)
		,POLICYLIMITRESULT VARCHAR(1)
		,ENABLECLAIMCLIENTCODEDEFAULT VARCHAR(1)
		,REEVALCOPYDOCCTRLID VARCHAR(1)
		,ENABLECEPHEADERFIELDEDITS VARCHAR(1)
		,ENABLESMARTCLIENTSELECTION VARCHAR(1)
		,SCSCLIENTSELECTIONCODE VARCHAR(12)
		,SCSPROVIDERSUBSET VARCHAR(4)
		,SCSCLIENTCODEMASK VARCHAR(4)
		,SCSDEFAULTCLIENT VARCHAR(4)
		,CLAIMEXTERNALIDASCARRIERCLAIMID VARCHAR(1)
		,POLICYEXTERNALIDASCARRIERPOLICYID VARCHAR(1)
		,URPROFILEID VARCHAR(8)
		,BEUROVERRIDESREQUIREREVIEWREF VARCHAR(1)
		,URENTRYVALIDATIONS VARCHAR(1)
		,PENDPPOEDICONTROL VARCHAR(1)
		,BEREEVALLINEADDDELETE VARCHAR(1)
		,CPTGROUPTOINDIVIDUAL VARCHAR(1)
		,CLAIMEXTERNALIDASCLAIMADMINCLAIMNUM VARCHAR(1)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,FINANCIALAGGREGATION VARCHAR )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.CLAIMIDMASK
		,T.CLAIMACCESS
		,T.CLAIMSYSDESC
		,T.POLICYHOLDERREQ
		,T.VALIDATEBRANCH
		,T.VALIDATEPOLICY
		,T.LGLCODE1TABLECODE
		,T.LGLCODE2TABLECODE
		,T.LGLCODE3TABLECODE
		,T.UROCCTABLECODE
		,T.POLICY5DAYSTABLECODE
		,T.POLICY90DAYSTABLECODE
		,T.JOB5DAYSTABLECODE
		,T.JOB90DAYSTABLECODE
		,T.HCOTRANSINDTABLECODE
		,T.QUALIFIEDINJWORKTABLECODE
		,T.PERMSTATIONARYTABLECODE
		,T.VALIDATEADJUSTER
		,T.MCOPROGRAM
		,T.ADJUSTERREQUIRED
		,T.HOSPITALADMITTABLECODE
		,T.ATTORNEYTAXADDRREQUIRED
		,T.BODYPARTTABLECODE
		,T.POLICYDEFAULTS
		,T.POLICYCOPAYAMOUNT
		,T.POLICYCOPAYPCT
		,T.POLICYDEDUCTIBLE
		,T.POLICYLIMIT
		,T.POLICYTIMELIMIT
		,T.POLICYLIMITWARNINGPCT
		,T.RESTRICTUSERACCESS
		,T.BEOVERRIDEPERMISSIONFLAG
		,T.ROOTCLAIMLENGTH
		,T.RELATECLAIMSTOTALPOLICYDETAIL
		,T.POLICYLIMITRESULT
		,T.ENABLECLAIMCLIENTCODEDEFAULT
		,T.REEVALCOPYDOCCTRLID
		,T.ENABLECEPHEADERFIELDEDITS
		,T.ENABLESMARTCLIENTSELECTION
		,T.SCSCLIENTSELECTIONCODE
		,T.SCSPROVIDERSUBSET
		,T.SCSCLIENTCODEMASK
		,T.SCSDEFAULTCLIENT
		,T.CLAIMEXTERNALIDASCARRIERCLAIMID
		,T.POLICYEXTERNALIDASCARRIERPOLICYID
		,T.URPROFILEID
		,T.BEUROVERRIDESREQUIREREVIEWREF
		,T.URENTRYVALIDATIONS
		,T.PENDPPOEDICONTROL
		,T.BEREEVALLINEADDDELETE
		,T.CPTGROUPTOINDIVIDUAL
		,T.CLAIMEXTERNALIDASCLAIMADMINCLAIMNUM
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.FINANCIALAGGREGATION
FROM src.ClaimSys T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimSys
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClaimSysData(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,TYPECODE VARCHAR(6)
		,SUBTYPE VARCHAR(12)
		,SUBSEQ NUMBER(5,0)
		,NUMDATA NUMBER(18,6)
		,TEXTDATA VARCHAR(6000) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.TYPECODE
		,T.SUBTYPE
		,T.SUBSEQ
		,T.NUMDATA
		,T.TEXTDATA
FROM src.ClaimSysData T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		TYPECODE,
		SUBTYPE,
		SUBSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClaimSysData
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		TYPECODE,
		SUBTYPE,
		SUBSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.TYPECODE = S.TYPECODE
	AND T.SUBTYPE = S.SUBTYPE
	AND T.SUBSEQ = S.SUBSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Client(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,NAME VARCHAR(30)
		,JURISDICTION VARCHAR(2)
		,CONTROLNUM VARCHAR(20)
		,POLICYTIMELIMIT NUMBER(5,0)
		,POLICYLIMITWARNINGPCT NUMBER(5,0)
		,POLICYLIMIT NUMBER(19,4)
		,POLICYDEDUCTIBLE NUMBER(19,4)
		,POLICYCOPAYPCT NUMBER(5,0)
		,POLICYCOPAYAMOUNT NUMBER(19,4)
		,BEDIAGNOSIS VARCHAR(1)
		,INVOICEBRCYCLE VARCHAR(1)
		,STATUS VARCHAR(1)
		,INVOICEGROUPBY VARCHAR(1)
		,BEDOI VARCHAR(1)
		,DRUGMARKUPBRAND NUMBER(5,0)
		,SUPPLYLIMIT NUMBER(5,0)
		,INVOICEPPOCYCLE VARCHAR(1)
		,INVOICEPPOTAX NUMBER(5,0)
		,DRUGMARKUPGEN NUMBER(5,0)
		,DRUGDISPGEN NUMBER(5,0)
		,DRUGDISPBRAND NUMBER(5,0)
		,BEADJUSTER VARCHAR(1)
		,INVOICETAX NUMBER(5,0)
		,COMPANYSEQ NUMBER(5,0)
		,BEMEDALERT VARCHAR(1)
		,UCRPERCENTILE NUMBER(5,0)
		,CLIENTCOMMENT VARCHAR(6000)
		,REMITATTENTION VARCHAR(30)
		,REMITADDRESS1 VARCHAR(30)
		,REMITADDRESS2 VARCHAR(30)
		,REMITCITYSTATEZIP VARCHAR(30)
		,REMITPHONE VARCHAR(12)
		,EXTERNALID VARCHAR(10)
		,BEOTHER VARCHAR(1)
		,MEDALERTDAYS NUMBER(5,0)
		,MEDALERTVISITS NUMBER(5,0)
		,MEDALERTMAXCHARGE NUMBER(19,4)
		,MEDALERTWARNVISITS NUMBER(5,0)
		,PROVIDERSUBSET VARCHAR(4)
		,ALLOWREREVIEW VARCHAR(1)
		,ACCTREP VARCHAR(2)
		,CLIENTTYPE VARCHAR(1)
		,UCRMARKUP NUMBER(5,0)
		,INVOICECOMBINED VARCHAR(1)
		,BESUBMITDT VARCHAR(1)
		,BERCVDCARRIERDATE VARCHAR(1)
		,BERCVDBILLREVIEWDATE VARCHAR(1)
		,BEDUEDATE VARCHAR(1)
		,PRODUCTCODE VARCHAR(1)
		,BEPROVINVOICE VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,DEFAULTBRTOUCR VARCHAR(1)
		,BASEPPOFEESOFFFS VARCHAR(1)
		,BECLIENTTOBTABLECODE VARCHAR(2)
		,BEFORCEPAY VARCHAR(1)
		,BEPAYAUTHORIZATION VARCHAR(1)
		,BECARRIERSEQFLAG VARCHAR(1)
		,BEPROVTYPETABLECODE VARCHAR(2)
		,BEPROVSPCL1TABLECODE VARCHAR(2)
		,BEPROVLICENSE VARCHAR(1)
		,BEPAYAUTHTABLECODE VARCHAR(2)
		,PENDREASONTABLECODE VARCHAR(2)
		,VOCREHAB VARCHAR(1)
		,EDIACKREQUIRED VARCHAR(1)
		,STATERPTIND VARCHAR(1)
		,BEPATIENTACCTNUM VARCHAR(1)
		,AUTODUP VARCHAR(1)
		,USEALLOWONDUP VARCHAR(1)
		,URIMPORTUSED VARCHAR(1)
		,URPROGSTARTDATE VARCHAR(1)
		,URIMPORTCTRLNUM VARCHAR(4)
		,URIMPORTCTRLGROUP VARCHAR(4)
		,UCRSOURCE VARCHAR(1)
		,UCRMARKUP2 NUMBER(5,0)
		,NGDTABLECODE VARCHAR(2)
		,BESUBPRODUCTTABLECODE VARCHAR(2)
		,COUNTRYTABLECODE VARCHAR(2)
		,BEREFPHYS VARCHAR(1)
		,BEPMTWARNDAYS NUMBER(5,0)
		,GEOSTATE VARCHAR(2)
		,BEDISABLEDOICHECK VARCHAR(1)
		,DELAYDAYS NUMBER(5,0)
		,BEVALIDATETOTAL VARCHAR(1)
		,BEFASTMATCH VARCHAR(1)
		,BEPRIORBILLDEFAULT VARCHAR(1)
		,BECLIENTDUEDAYS NUMBER(5,0)
		,BEAUTOCALCDUEDATE VARCHAR(1)
		,UCRSOURCE2 VARCHAR(1)
		,UCRPERCENTILE2 NUMBER(5,0)
		,BEPROVSPCL2TABLECODE VARCHAR(2)
		,FEERATECNTRLEX VARCHAR(4)
		,FEERATECNTRLIN VARCHAR(4)
		,BECOLLISIONPROVBILLS VARCHAR(1)
		,BECOLLISIONBILLS VARCHAR(1)
		,SUPPLYMARKUP NUMBER(5,0)
		,BECOLLISIONPROVIDERS VARCHAR(1)
		,DEFAULTCOPAYDEDUCT VARCHAR(1)
		,AUTOBUNDLING VARCHAR(1)
		,BEVALIDATEBILLCLAIMICD9 VARCHAR(1)
		,ENABLEGENERICREPRICE VARCHAR(1)
		,BESUBPRODFEEINFO VARCHAR(1)
		,DENYNONINJDRUGS VARCHAR(1)
		,BECOLLISIONDOSLINES VARCHAR(1)
		,PPOPROFILESITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,BESHOWDEAWARNING VARCHAR(1)
		,BEHIDEADJUSTERCOLUMN VARCHAR(1)
		,BEHIDECOPAYCOLUMN VARCHAR(1)
		,BEHIDEDEDUCTCOLUMN VARCHAR(1)
		,BEPAIDDATE VARCHAR(1)
		,BEPROCCROSSWALK VARCHAR(1)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,BECONSULTDATE VARCHAR(1)
		,BESHOWPHARMACYCOLUMNS VARCHAR(1)
		,BEADJVERIFDATES VARCHAR(1)
		,FUTUREDOSMONTHLIMIT NUMBER(5,0)
		,BESTOPATLINEUNITS VARCHAR(1)
		,BENYNF10FIELDS VARCHAR(1)
		,ENABLEDRGGROUPER VARCHAR(1)
		,APPLYCPTAMAUCRRULES VARCHAR(1)
		,BEPROVSIGONFILE VARCHAR(1)
		,BETIMEENTRY VARCHAR(1)
		,SALESTAXEXEMPT VARCHAR(1)
		,INVOICERETAILPROFILE VARCHAR(4)
		,INVOICEWHOLESALEPROFILE VARCHAR(4)
		,BEDEFAULTTAXZIP VARCHAR(1)
		,RECEIPTHANDLINGCODE VARCHAR(1)
		,PAYMENTHANDLINGCODE VARCHAR(1)
		,DEFAULTRETAILSALESTAXZIP VARCHAR(9)
		,DEFAULTWHOLESALESALESTAXZIP VARCHAR(9)
		,TXNONSUBSCRIB VARCHAR(1)
		,ROOTCLAIMLENGTH NUMBER(5,0)
		,BEDAWTABLECODE VARCHAR(4)
		,EORPROFILESEQ NUMBER(10,0)
		,BEOTHERBILLINGPROVIDER VARCHAR(1)
		,BEDOCCTRLID VARCHAR(1)
		,REPORTINGETL VARCHAR(1)
		,CLAIMVERIFICATION VARCHAR(1)
		,PROVVERIFICATION VARCHAR(1)
		,BEPERMITALLOWOVER VARCHAR(1)
		,BESTOPATLINEDXREF VARCHAR(1)
		,BEQUICKINFOCODE VARCHAR(12)
		,EXCLUDEDSMARTCLIENTSELECT VARCHAR(1)
		,COLLISIONSSEARCHBY VARCHAR(1)
		,AUTODUPINCLUDEPROV VARCHAR(1)
		,URPROFILEID VARCHAR(8)
		,EXCLUDEURDM VARCHAR(1)
		,BECOLLISIONURCASES VARCHAR(1)
		,MUEEDITS VARCHAR(1)
		,CPTRARITY NUMBER(5,2)
		,ICDRARITY NUMBER(5,2)
		,ICDTOCPTRARITY NUMBER(5,2)
		,BEDISABLEPPOSEARCH VARCHAR(1)
		,BESHOWLINEEXTERNALIDCOLUMN VARCHAR(1)
		,BESHOWLINEPRIORAUTHCOLUMN VARCHAR(1)
		,SMARTGUIDELINESFLAG VARCHAR(1)
		,BEPROVBILLINGLICENSE VARCHAR(1)
		,BEPROVFACILITYLICENSE VARCHAR(1)
		,VENDORPROVIDERSUBSET VARCHAR(4)
		,DEFAULTJURISCLIENTCODE VARCHAR(1)
		,CLIENTGROUPID NUMBER(10,0) 
		,DRUGDISPFEEAPPLYTO VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.NAME
		,T.JURISDICTION
		,T.CONTROLNUM
		,T.POLICYTIMELIMIT
		,T.POLICYLIMITWARNINGPCT
		,T.POLICYLIMIT
		,T.POLICYDEDUCTIBLE
		,T.POLICYCOPAYPCT
		,T.POLICYCOPAYAMOUNT
		,T.BEDIAGNOSIS
		,T.INVOICEBRCYCLE
		,T.STATUS
		,T.INVOICEGROUPBY
		,T.BEDOI
		,T.DRUGMARKUPBRAND
		,T.SUPPLYLIMIT
		,T.INVOICEPPOCYCLE
		,T.INVOICEPPOTAX
		,T.DRUGMARKUPGEN
		,T.DRUGDISPGEN
		,T.DRUGDISPBRAND
		,T.BEADJUSTER
		,T.INVOICETAX
		,T.COMPANYSEQ
		,T.BEMEDALERT
		,T.UCRPERCENTILE
		,T.CLIENTCOMMENT
		,T.REMITATTENTION
		,T.REMITADDRESS1
		,T.REMITADDRESS2
		,T.REMITCITYSTATEZIP
		,T.REMITPHONE
		,T.EXTERNALID
		,T.BEOTHER
		,T.MEDALERTDAYS
		,T.MEDALERTVISITS
		,T.MEDALERTMAXCHARGE
		,T.MEDALERTWARNVISITS
		,T.PROVIDERSUBSET
		,T.ALLOWREREVIEW
		,T.ACCTREP
		,T.CLIENTTYPE
		,T.UCRMARKUP
		,T.INVOICECOMBINED
		,T.BESUBMITDT
		,T.BERCVDCARRIERDATE
		,T.BERCVDBILLREVIEWDATE
		,T.BEDUEDATE
		,T.PRODUCTCODE
		,T.BEPROVINVOICE
		,T.CLAIMSYSSUBSET
		,T.DEFAULTBRTOUCR
		,T.BASEPPOFEESOFFFS
		,T.BECLIENTTOBTABLECODE
		,T.BEFORCEPAY
		,T.BEPAYAUTHORIZATION
		,T.BECARRIERSEQFLAG
		,T.BEPROVTYPETABLECODE
		,T.BEPROVSPCL1TABLECODE
		,T.BEPROVLICENSE
		,T.BEPAYAUTHTABLECODE
		,T.PENDREASONTABLECODE
		,T.VOCREHAB
		,T.EDIACKREQUIRED
		,T.STATERPTIND
		,T.BEPATIENTACCTNUM
		,T.AUTODUP
		,T.USEALLOWONDUP
		,T.URIMPORTUSED
		,T.URPROGSTARTDATE
		,T.URIMPORTCTRLNUM
		,T.URIMPORTCTRLGROUP
		,T.UCRSOURCE
		,T.UCRMARKUP2
		,T.NGDTABLECODE
		,T.BESUBPRODUCTTABLECODE
		,T.COUNTRYTABLECODE
		,T.BEREFPHYS
		,T.BEPMTWARNDAYS
		,T.GEOSTATE
		,T.BEDISABLEDOICHECK
		,T.DELAYDAYS
		,T.BEVALIDATETOTAL
		,T.BEFASTMATCH
		,T.BEPRIORBILLDEFAULT
		,T.BECLIENTDUEDAYS
		,T.BEAUTOCALCDUEDATE
		,T.UCRSOURCE2
		,T.UCRPERCENTILE2
		,T.BEPROVSPCL2TABLECODE
		,T.FEERATECNTRLEX
		,T.FEERATECNTRLIN
		,T.BECOLLISIONPROVBILLS
		,T.BECOLLISIONBILLS
		,T.SUPPLYMARKUP
		,T.BECOLLISIONPROVIDERS
		,T.DEFAULTCOPAYDEDUCT
		,T.AUTOBUNDLING
		,T.BEVALIDATEBILLCLAIMICD9
		,T.ENABLEGENERICREPRICE
		,T.BESUBPRODFEEINFO
		,T.DENYNONINJDRUGS
		,T.BECOLLISIONDOSLINES
		,T.PPOPROFILESITECODE
		,T.PPOPROFILEID
		,T.BESHOWDEAWARNING
		,T.BEHIDEADJUSTERCOLUMN
		,T.BEHIDECOPAYCOLUMN
		,T.BEHIDEDEDUCTCOLUMN
		,T.BEPAIDDATE
		,T.BEPROCCROSSWALK
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.BECONSULTDATE
		,T.BESHOWPHARMACYCOLUMNS
		,T.BEADJVERIFDATES
		,T.FUTUREDOSMONTHLIMIT
		,T.BESTOPATLINEUNITS
		,T.BENYNF10FIELDS
		,T.ENABLEDRGGROUPER
		,T.APPLYCPTAMAUCRRULES
		,T.BEPROVSIGONFILE
		,T.BETIMEENTRY
		,T.SALESTAXEXEMPT
		,T.INVOICERETAILPROFILE
		,T.INVOICEWHOLESALEPROFILE
		,T.BEDEFAULTTAXZIP
		,T.RECEIPTHANDLINGCODE
		,T.PAYMENTHANDLINGCODE
		,T.DEFAULTRETAILSALESTAXZIP
		,T.DEFAULTWHOLESALESALESTAXZIP
		,T.TXNONSUBSCRIB
		,T.ROOTCLAIMLENGTH
		,T.BEDAWTABLECODE
		,T.EORPROFILESEQ
		,T.BEOTHERBILLINGPROVIDER
		,T.BEDOCCTRLID
		,T.REPORTINGETL
		,T.CLAIMVERIFICATION
		,T.PROVVERIFICATION
		,T.BEPERMITALLOWOVER
		,T.BESTOPATLINEDXREF
		,T.BEQUICKINFOCODE
		,T.EXCLUDEDSMARTCLIENTSELECT
		,T.COLLISIONSSEARCHBY
		,T.AUTODUPINCLUDEPROV
		,T.URPROFILEID
		,T.EXCLUDEURDM
		,T.BECOLLISIONURCASES
		,T.MUEEDITS
		,T.CPTRARITY
		,T.ICDRARITY
		,T.ICDTOCPTRARITY
		,T.BEDISABLEPPOSEARCH
		,T.BESHOWLINEEXTERNALIDCOLUMN
		,T.BESHOWLINEPRIORAUTHCOLUMN
		,T.SMARTGUIDELINESFLAG
		,T.BEPROVBILLINGLICENSE
		,T.BEPROVFACILITYLICENSE
		,T.VENDORPROVIDERSUBSET
		,T.DEFAULTJURISCLIENTCODE
		,T.CLIENTGROUPID
		,T.DRUGDISPFEEAPPLYTO
FROM src.Client T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Client
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClientData(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,TYPECODE VARCHAR(6)
		,SUBTYPE VARCHAR(12)
		,SUBSEQ NUMBER(5,0)
		,NUMDATA NUMBER(18,6)
		,TEXTDATA VARCHAR(6000)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.TYPECODE
		,T.SUBTYPE
		,T.SUBSEQ
		,T.NUMDATA
		,T.TEXTDATA
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.ClientData T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		TYPECODE,
		SUBTYPE,
		SUBSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClientData
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		TYPECODE,
		SUBTYPE,
		SUBSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.TYPECODE = S.TYPECODE
	AND T.SUBTYPE = S.SUBTYPE
	AND T.SUBSEQ = S.SUBSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ClientInsurer(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,INSURERTYPE VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,INSURERSEQ NUMBER(10,0)
		,TERMINATIONDATE DATETIME )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.INSURERTYPE
		,T.EFFECTIVEDATE
		,T.INSURERSEQ
		,T.TERMINATIONDATE
FROM src.ClientInsurer T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		INSURERTYPE,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ClientInsurer
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		INSURERTYPE,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.INSURERTYPE = S.INSURERTYPE
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Drugs(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,DRUGCODE VARCHAR(4)
		,DRUGSDESCRIPTION VARCHAR(20)
		,DISP VARCHAR(20)
		,DRUGTYPE VARCHAR(1)
		,CAT VARCHAR(1)
		,UPDATEFLAG VARCHAR(1)
		,UV NUMBER(10,0)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.DRUGCODE
		,T.DRUGSDESCRIPTION
		,T.DISP
		,T.DRUGTYPE
		,T.CAT
		,T.UPDATEFLAG
		,T.UV
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.Drugs T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		DRUGCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Drugs
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		DRUGCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.DRUGCODE = S.DRUGCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_EDIControl(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,EDICONTROLSEQ NUMBER(10,0)
		,EDIMAPTOOLSITECODE VARCHAR(3)
		,EDIPORTTYPE VARCHAR(1)
		,EDIMAPTOOLID NUMBER(10,0)
		,NAME VARCHAR(50)
		,LASTTAPEDATE DATETIME
		,LASTSTARTDATE DATETIME
		,LASTENDDATE DATETIME
		,DAYCOUNTER NUMBER(5,0)
		,TOTALCOUNTER NUMBER(10,0)
		,VENDORNUM VARCHAR(20)
		,VENDORCONTACT VARCHAR(50)
		,VENDORPHONE VARCHAR(10)
		,ACCOUNTNUM VARCHAR(20)
		,OFFICENUM VARCHAR(20)
		,EDISENDERQUALIFIER VARCHAR(2)
		,EDISENDERIDENTIFIER VARCHAR(15)
		,EDIRECEIVERQUALIFIER VARCHAR(2)
		,EDIRECEIVERIDENTIFIER VARCHAR(15)
		,EDIACKNOWLEDGEMENT VARCHAR(1)
		,EDITESTINDICATOR VARCHAR(1)
		,EXPORTCREDITS VARCHAR(1)
		,EXPORTNEGATIVES VARCHAR(1)
		,CREATEEORS VARCHAR(1)
		,SPECIALPROCESSFLAG VARCHAR(120)
		,ARCOMPANY VARCHAR(20)
		,ARCONTACT VARCHAR(30)
		,ARADDR1 VARCHAR(30)
		,ARADDR2 VARCHAR(30)
		,ARCITY VARCHAR(30)
		,ARSTATE VARCHAR(2)
		,ARZIP VARCHAR(9)
		,ARPHONE VARCHAR(10)
		,EDISENDERZIP VARCHAR(9)
		,EDIRECEIVERZIP VARCHAR(9)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,PENDUSERGROUP VARCHAR(12)
		,DAYBILLCOUNT NUMBER(10,0)
		,TOTALBILLCOUNT NUMBER(19,0)
		,EXPORTZEROALLOWBILLS VARCHAR(1)
		,CREATENF10S VARCHAR(1)
		,PRINTNF10IDENTIFIER VARCHAR(1)
		,NF10FILEFORMAT VARCHAR(3)
		,EORFILEFORMAT VARCHAR(3)
		,PRINTEORIDENTIFIER VARCHAR(1)
		,CREATEEORWITHNF10 VARCHAR(1)
		,EXCLUDEADJUSTER VARCHAR(1)
		,EXCLUDEATTORNEY VARCHAR(1)
		,EXCLUDEBRANCH VARCHAR(1)
		,EXCLUDECLAIM VARCHAR(1)
		,EXCLUDEINSURER VARCHAR(1)
		,EXCLUDEPOLICY VARCHAR(1)
		,DAYSPAST NUMBER(5,0)
		,EMAILNOTIFICATIONLIST VARCHAR(255)
		,WFVALIDATIONFLAG VARCHAR(1)
		,PRINTNF10PROVBILLINGADDR VARCHAR(1)
		,BATCHACKSLA NUMBER(10,0)
		,DETAILACKSLA NUMBER(10,0)
		,EXPORTOTHERBILLINGPROVIDER VARCHAR(1)
		,FORMATREVENUECODES VARCHAR(1)
		,CREATEC8S VARCHAR(1)
		,PRINTC8IDENTIFIER VARCHAR(1)
		,CREATEEORWITHC8 VARCHAR(1)
		,NYPROVIDERC81 VARCHAR(1)
		,NYPROVIDERC84 VARCHAR(1)
		,NYPROVIDERC8IDENTIFIER VARCHAR(1)
		,NYPROVIDERC8EOR VARCHAR(1)
		,NYBOARDC81 VARCHAR(1)
		,NYBOARDC84 VARCHAR(1)
		,NYBOARDC8IDENTIFIER VARCHAR(1)
		,NYBOARDC8EOR VARCHAR(1)
		,NYCLAIMANTC81 VARCHAR(1)
		,NYCLAIMANTC8IDENTIFIER VARCHAR(1)
		,NYCLAIMANTC8EOR VARCHAR(1)
		,NYCLAIMANTC8EORCOVER VARCHAR(1)
		,NYATTORNEYC81 VARCHAR(1)
		,NYATTORNEYC8IDENTIFIER VARCHAR(1)
		,NYATTORNEYC8EOR VARCHAR(1)
		,NYATTORNEYC8EORCOVER VARCHAR(1)
		,NYPROVIDERFORMAT VARCHAR(3)
		,NYBOARDFORMAT VARCHAR(3)
		,NYCLAIMANTFORMAT VARCHAR(3)
		,NYATTORNEYFORMAT VARCHAR(3)
		,EXPORTPPOBILLCOMMENT VARCHAR(1)
		,INCLUDENETWORK VARCHAR(1)
		,INCLUDECLAIMUDF VARCHAR(1)
		,INCLUDEPROVIDERUDF VARCHAR(1)
		,INCLUDEBILLUDF VARCHAR(1)
		,NETREEVALFEES VARCHAR(1)
		,EXPORTCARCS VARCHAR(1)
		,EXTENDEDHEADER VARCHAR(1)
		,EXTENDEDTRAILER VARCHAR(1)
		,SUBMISSIONREASONCODE VARCHAR(50)
		,INCLUDEBILLATTACHMENT VARCHAR(1)
		,USEEXTENDEDLAYOUT VARCHAR(120)
		,EXCLUDEBILLATTACHMENT VARCHAR(500)
		,EXPORTDIARYNOTES VARCHAR(1)
		,UPDATEZABILLCONTROLTOACCEPTED VARCHAR(1)
		,UPDATEZAPAIDDATETOPOSTDATE VARCHAR(1)
		,SETZAPAIDDATETOPOSTDATEDAYS NUMBER(10,0)
		,INCLUDEADJUSTERUDF VARCHAR(1)
		,INCLUDEPOLICYUDF VARCHAR(1)
		,EXPORTZEROALLOWREEVALS VARCHAR(1)
		,UPDATEREVALBILLCONTROLTOACCEPTED VARCHAR(1)
		,UPDATEREVALPAIDDATETOPOSTDATE VARCHAR(1)
		,SETREVALPAIDDATETOPOSTDATEDAYS NUMBER(10,0)
		,REDUCTIONSPEREORPROFILE VARCHAR(1)
		,INCLUDEBILLIMAGE VARCHAR(1)
		,NYCLAIMANTC84 VARCHAR(1)
		,NYATTORNEYC84 VARCHAR(1)
		,EDIJURISDICTION VARCHAR(20) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.EDICONTROLSEQ
		,T.EDIMAPTOOLSITECODE
		,T.EDIPORTTYPE
		,T.EDIMAPTOOLID
		,T.NAME
		,T.LASTTAPEDATE
		,T.LASTSTARTDATE
		,T.LASTENDDATE
		,T.DAYCOUNTER
		,T.TOTALCOUNTER
		,T.VENDORNUM
		,T.VENDORCONTACT
		,T.VENDORPHONE
		,T.ACCOUNTNUM
		,T.OFFICENUM
		,T.EDISENDERQUALIFIER
		,T.EDISENDERIDENTIFIER
		,T.EDIRECEIVERQUALIFIER
		,T.EDIRECEIVERIDENTIFIER
		,T.EDIACKNOWLEDGEMENT
		,T.EDITESTINDICATOR
		,T.EXPORTCREDITS
		,T.EXPORTNEGATIVES
		,T.CREATEEORS
		,T.SPECIALPROCESSFLAG
		,T.ARCOMPANY
		,T.ARCONTACT
		,T.ARADDR1
		,T.ARADDR2
		,T.ARCITY
		,T.ARSTATE
		,T.ARZIP
		,T.ARPHONE
		,T.EDISENDERZIP
		,T.EDIRECEIVERZIP
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
		,T.PENDUSERGROUP
		,T.DAYBILLCOUNT
		,T.TOTALBILLCOUNT
		,T.EXPORTZEROALLOWBILLS
		,T.CREATENF10S
		,T.PRINTNF10IDENTIFIER
		,T.NF10FILEFORMAT
		,T.EORFILEFORMAT
		,T.PRINTEORIDENTIFIER
		,T.CREATEEORWITHNF10
		,T.EXCLUDEADJUSTER
		,T.EXCLUDEATTORNEY
		,T.EXCLUDEBRANCH
		,T.EXCLUDECLAIM
		,T.EXCLUDEINSURER
		,T.EXCLUDEPOLICY
		,T.DAYSPAST
		,T.EMAILNOTIFICATIONLIST
		,T.WFVALIDATIONFLAG
		,T.PRINTNF10PROVBILLINGADDR
		,T.BATCHACKSLA
		,T.DETAILACKSLA
		,T.EXPORTOTHERBILLINGPROVIDER
		,T.FORMATREVENUECODES
		,T.CREATEC8S
		,T.PRINTC8IDENTIFIER
		,T.CREATEEORWITHC8
		,T.NYPROVIDERC81
		,T.NYPROVIDERC84
		,T.NYPROVIDERC8IDENTIFIER
		,T.NYPROVIDERC8EOR
		,T.NYBOARDC81
		,T.NYBOARDC84
		,T.NYBOARDC8IDENTIFIER
		,T.NYBOARDC8EOR
		,T.NYCLAIMANTC81
		,T.NYCLAIMANTC8IDENTIFIER
		,T.NYCLAIMANTC8EOR
		,T.NYCLAIMANTC8EORCOVER
		,T.NYATTORNEYC81
		,T.NYATTORNEYC8IDENTIFIER
		,T.NYATTORNEYC8EOR
		,T.NYATTORNEYC8EORCOVER
		,T.NYPROVIDERFORMAT
		,T.NYBOARDFORMAT
		,T.NYCLAIMANTFORMAT
		,T.NYATTORNEYFORMAT
		,T.EXPORTPPOBILLCOMMENT
		,T.INCLUDENETWORK
		,T.INCLUDECLAIMUDF
		,T.INCLUDEPROVIDERUDF
		,T.INCLUDEBILLUDF
		,T.NETREEVALFEES
		,T.EXPORTCARCS
		,T.EXTENDEDHEADER
		,T.EXTENDEDTRAILER
		,T.SUBMISSIONREASONCODE
		,T.INCLUDEBILLATTACHMENT
		,T.USEEXTENDEDLAYOUT
		,T.EXCLUDEBILLATTACHMENT
		,T.EXPORTDIARYNOTES
		,T.UPDATEZABILLCONTROLTOACCEPTED
		,T.UPDATEZAPAIDDATETOPOSTDATE
		,T.SETZAPAIDDATETOPOSTDATEDAYS
		,T.INCLUDEADJUSTERUDF
		,T.INCLUDEPOLICYUDF
		,T.EXPORTZEROALLOWREEVALS
		,T.UPDATEREVALBILLCONTROLTOACCEPTED
		,T.UPDATEREVALPAIDDATETOPOSTDATE
		,T.SETREVALPAIDDATETOPOSTDATEDAYS
		,T.REDUCTIONSPEREORPROFILE
		,T.INCLUDEBILLIMAGE
		,T.NYCLAIMANTC84
		,T.NYATTORNEYC84
		,T.EDIJURISDICTION 
FROM src.EDIControl T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		EDICONTROLSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.EDIControl
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		EDICONTROLSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.EDICONTROLSEQ = S.EDICONTROLSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_EDIMapTool(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,SITECODE VARCHAR(3)
		,EDIPORTTYPE VARCHAR(1)
		,EDIMAPTOOLID NUMBER(10,0)
		,EDISOURCEID VARCHAR(2)
		,EDIMAPTOOLNAME VARCHAR(50)
		,EDIMAPTOOLTYPE VARCHAR(4)
		,EDIMAPTOOLDESC VARCHAR(50)
		,EDIOBJECTID NUMBER(10,0)
		,MENUTITLE VARCHAR(50)
		,SECURITYLEVEL NUMBER(10,0)
		,EDIINPUTFILENAME VARCHAR(50)
		,EDIOUTPUTFILENAME VARCHAR(50)
		,EDIMULTIFILES VARCHAR(1)
		,EDIREPORTTYPE NUMBER(5,0)
		,FORMPROPERTIES VARCHAR
		,JURISDICTION VARCHAR(2)
		,EDITYPE VARCHAR(1)
		,EDIPARTNERID VARCHAR(3)
		,BILLCONTROLTABLECODE VARCHAR(4)
		,EDICONTROLFLAG VARCHAR(1)
		,BILLCONTROLSEQ NUMBER(5,0)
		,EDIOBJECTSITECODE VARCHAR(3)
		,PERMITUNDEFINEDRECIDS VARCHAR(1)
		,SELECTIONQUERY VARCHAR(255)
		,REPORTSELECTIONQUERY VARCHAR(255)
		,CLASS VARCHAR(4)
		,LINESELECTIONQUERY VARCHAR(255)
		,PORTPROPERTIES VARCHAR
		,EDIFILECONFIGSITECODE VARCHAR(3)
		,EDIFILECONFIGSEQ NUMBER(10,0)
		,LZCONTROLTABLECODE VARCHAR(4)
		,LZCONTROLSEQ NUMBER(5,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.SITECODE
		,T.EDIPORTTYPE
		,T.EDIMAPTOOLID
		,T.EDISOURCEID
		,T.EDIMAPTOOLNAME
		,T.EDIMAPTOOLTYPE
		,T.EDIMAPTOOLDESC
		,T.EDIOBJECTID
		,T.MENUTITLE
		,T.SECURITYLEVEL
		,T.EDIINPUTFILENAME
		,T.EDIOUTPUTFILENAME
		,T.EDIMULTIFILES
		,T.EDIREPORTTYPE
		,T.FORMPROPERTIES
		,T.JURISDICTION
		,T.EDITYPE
		,T.EDIPARTNERID
		,T.BILLCONTROLTABLECODE
		,T.EDICONTROLFLAG
		,T.BILLCONTROLSEQ
		,T.EDIOBJECTSITECODE
		,T.PERMITUNDEFINEDRECIDS
		,T.SELECTIONQUERY
		,T.REPORTSELECTIONQUERY
		,T.CLASS
		,T.LINESELECTIONQUERY
		,T.PORTPROPERTIES
		,T.EDIFILECONFIGSITECODE
		,T.EDIFILECONFIGSEQ
		,T.LZCONTROLTABLECODE
		,T.LZCONTROLSEQ
FROM src.EDIMapTool T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		SITECODE,
		EDIPORTTYPE,
		EDIMAPTOOLID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.EDIMapTool
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		SITECODE,
		EDIPORTTYPE,
		EDIMAPTOOLID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.SITECODE = S.SITECODE
	AND T.EDIPORTTYPE = S.EDIPORTTYPE
	AND T.EDIMAPTOOLID = S.EDIMAPTOOLID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_EDIXmit(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,EDIXMITSEQ NUMBER(10,0)
		,FILESPEC VARCHAR(8000)
		,FILELOCATION VARCHAR(255)
		,RECOMMENDEDPAYMENT NUMBER(19,4)
		,USERID VARCHAR(2)
		,XMITDATE DATETIME
		,DATEFROM DATETIME
		,DATETO DATETIME
		,EDITYPE VARCHAR(1)
		,EDIPARTNERID VARCHAR(3)
		,DBVERSION VARCHAR(20)
		,EDIMAPTOOLSITECODE VARCHAR(3)
		,EDIPORTTYPE VARCHAR(1)
		,EDIMAPTOOLID NUMBER(10,0)
		,TRANSMISSIONSTATUS VARCHAR(1)
		,BATCHNUMBER NUMBER(10,0)
		,SENDERID VARCHAR(20)
		,RECEIVERID VARCHAR(20)
		,EXTERNALBATCHID VARCHAR(50)
		,SARELATEDBATCHID NUMBER(19,0)
		,ACKNOTECODE VARCHAR(3)
		,ACKNOTE VARCHAR(50)
		,EXTERNALBATCHDATE DATETIME
		,USERNOTES VARCHAR(1000)
		,RESUBMITDATE DATETIME
		,RESUBMITUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.EDIXMITSEQ
		,T.FILESPEC
		,T.FILELOCATION
		,T.RECOMMENDEDPAYMENT
		,T.USERID
		,T.XMITDATE
		,T.DATEFROM
		,T.DATETO
		,T.EDITYPE
		,T.EDIPARTNERID
		,T.DBVERSION
		,T.EDIMAPTOOLSITECODE
		,T.EDIPORTTYPE
		,T.EDIMAPTOOLID
		,T.TRANSMISSIONSTATUS
		,T.BATCHNUMBER
		,T.SENDERID
		,T.RECEIVERID
		,T.EXTERNALBATCHID
		,T.SARELATEDBATCHID
		,T.ACKNOTECODE
		,T.ACKNOTE
		,T.EXTERNALBATCHDATE
		,T.USERNOTES
		,T.RESUBMITDATE
		,T.RESUBMITUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.EDIXmit T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		EDIXMITSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.EDIXmit
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		EDIXMITSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.EDIXMITSEQ = S.EDIXMITSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_EDIXmitBill(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,EDIXMITBILLSEQ NUMBER(10,0)
		,EDIXMITSEQ NUMBER(10,0)
		,EDIHISTORYPROVIDERSEQ NUMBER(10,0)
		,EDIHISTORYCLAIMSEQ NUMBER(10,0)
		,EDIHISTORYINSURERSEQ NUMBER(10,0)
		,EDICONTROLSEQ NUMBER(10,0)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,JURISDICTION VARCHAR(2)
		,TOB VARCHAR(1)
		,UB92TOB VARCHAR(10)
		,BILLSEQORGREV NUMBER(10,0)
		,TOTALCHARGE NUMBER(19,4)
		,BILLABLELINES NUMBER(10,0)
		,PAIDDATE DATETIME
		,PAIDAMOUNT NUMBER(19,4)
		,DRG VARCHAR(3)
		,PATIENTSTATUS VARCHAR(2)
		,POSTDATE DATETIME
		,DOCCTRLID VARCHAR(50)
		,DOSFIRST DATETIME
		,DOSLAST DATETIME
		,PPONETWORKID VARCHAR(2)
		,PPOCONTRACTID VARCHAR(30)
		,ADJUSTER VARCHAR(25)
		,CARRIERSEQNEW VARCHAR(30)
		,PROVINVOICE VARCHAR(14)
		,PROVSPECIALTY1 VARCHAR(10)
		,CLIENTTOB VARCHAR(5)
		,SUBPRODUCTCODE VARCHAR(1)
		,DUPCLIENTCODE VARCHAR(4)
		,DUPBILLSEQ NUMBER(10,0)
		,CONSULTDATE DATETIME
		,ADMITDATE DATETIME
		,DISCHARGEDATE DATETIME
		,SUBMITDATE DATETIME
		,RCVDDATE DATETIME
		,RCVDBRDATE DATETIME
		,REVIEWDATE DATETIME
		,DUEDATE DATETIME
		,PMTAUTH VARCHAR(4)
		,FORCEPAY VARCHAR(1)
		,PROVLICENSENUM VARCHAR(30)
		,CREATEUSERID VARCHAR(2)
		,MODUSERID VARCHAR(2)
		,PATIENTACCOUNT VARCHAR(20)
		,REFPROVNAME VARCHAR(40)
		,PROVTYPE VARCHAR(3)
		,DOI DATETIME
		,GEOSTATE VARCHAR(2)
		,MANUALREDUCTIONMODE NUMBER(5,0)
		,PPONETWORKJURISDICTIONIND VARCHAR(1)
		,PPONETWORKJURISDICTIONINSURERSEQ NUMBER(10,0)
		,WFQUEUEPARAMETER1 VARCHAR(35)
		,CHECKNUM VARCHAR(30)
		,EXTERNALID VARCHAR(50)
		,EDITESTINDICATOR VARCHAR(1)
		,ICDVERSION NUMBER(5,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.EDIXMITBILLSEQ
		,T.EDIXMITSEQ
		,T.EDIHISTORYPROVIDERSEQ
		,T.EDIHISTORYCLAIMSEQ
		,T.EDIHISTORYINSURERSEQ
		,T.EDICONTROLSEQ
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.JURISDICTION
		,T.TOB
		,T.UB92TOB
		,T.BILLSEQORGREV
		,T.TOTALCHARGE
		,T.BILLABLELINES
		,T.PAIDDATE
		,T.PAIDAMOUNT
		,T.DRG
		,T.PATIENTSTATUS
		,T.POSTDATE
		,T.DOCCTRLID
		,T.DOSFIRST
		,T.DOSLAST
		,T.PPONETWORKID
		,T.PPOCONTRACTID
		,T.ADJUSTER
		,T.CARRIERSEQNEW
		,T.PROVINVOICE
		,T.PROVSPECIALTY1
		,T.CLIENTTOB
		,T.SUBPRODUCTCODE
		,T.DUPCLIENTCODE
		,T.DUPBILLSEQ
		,T.CONSULTDATE
		,T.ADMITDATE
		,T.DISCHARGEDATE
		,T.SUBMITDATE
		,T.RCVDDATE
		,T.RCVDBRDATE
		,T.REVIEWDATE
		,T.DUEDATE
		,T.PMTAUTH
		,T.FORCEPAY
		,T.PROVLICENSENUM
		,T.CREATEUSERID
		,T.MODUSERID
		,T.PATIENTACCOUNT
		,T.REFPROVNAME
		,T.PROVTYPE
		,T.DOI
		,T.GEOSTATE
		,T.MANUALREDUCTIONMODE
		,T.PPONETWORKJURISDICTIONIND
		,T.PPONETWORKJURISDICTIONINSURERSEQ
		,T.WFQUEUEPARAMETER1
		,T.CHECKNUM
		,T.EXTERNALID
		,T.EDITESTINDICATOR
		,T.ICDVERSION
FROM src.EDIXmitBill T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		EDIXMITBILLSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.EDIXmitBill
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		EDIXMITBILLSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.EDIXMITBILLSEQ = S.EDIXMITBILLSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_EntityType(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ENTITYTYPEID NUMBER(10,0)
		,ENTITYTYPEKEY VARCHAR(250)
		,DESCRIPTION VARCHAR )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ENTITYTYPEID
		,T.ENTITYTYPEKEY
		,T.DESCRIPTION
FROM src.EntityType T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ENTITYTYPEID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.EntityType
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ENTITYTYPEID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ENTITYTYPEID = S.ENTITYTYPEID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_FSProcedure(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,EXTENSION VARCHAR(3)
		,PROCEDURECODE VARCHAR(6)
		,FSPROCDESCRIPTION VARCHAR(24)
		,SV VARCHAR(1)
		,STAR VARCHAR(1)
		,PANEL VARCHAR(1)
		,IP VARCHAR(1)
		,MULT VARCHAR(1)
		,ASSTSURGEON VARCHAR(1)
		,SECTIONFLAG VARCHAR(1)
		,FUP VARCHAR(3)
		,BAV NUMBER(5,0)
		,PROCGROUP VARCHAR(4)
		,VIEWTYPE NUMBER(5,0)
		,UNITVALUE1 NUMBER(19,4)
		,UNITVALUE2 NUMBER(19,4)
		,UNITVALUE3 NUMBER(19,4)
		,UNITVALUE4 NUMBER(19,4)
		,UNITVALUE5 NUMBER(19,4)
		,UNITVALUE6 NUMBER(19,4)
		,UNITVALUE7 NUMBER(19,4)
		,UNITVALUE8 NUMBER(19,4)
		,UNITVALUE9 NUMBER(19,4)
		,UNITVALUE10 NUMBER(19,4)
		,UNITVALUE11 NUMBER(19,4)
		,UNITVALUE12 NUMBER(19,4)
		,PROUNITVALUE1 NUMBER(19,4)
		,PROUNITVALUE2 NUMBER(19,4)
		,PROUNITVALUE3 NUMBER(19,4)
		,PROUNITVALUE4 NUMBER(19,4)
		,PROUNITVALUE5 NUMBER(19,4)
		,PROUNITVALUE6 NUMBER(19,4)
		,PROUNITVALUE7 NUMBER(19,4)
		,PROUNITVALUE8 NUMBER(19,4)
		,PROUNITVALUE9 NUMBER(19,4)
		,PROUNITVALUE10 NUMBER(19,4)
		,PROUNITVALUE11 NUMBER(19,4)
		,PROUNITVALUE12 NUMBER(19,4)
		,TECHUNITVALUE1 NUMBER(19,4)
		,TECHUNITVALUE2 NUMBER(19,4)
		,TECHUNITVALUE3 NUMBER(19,4)
		,TECHUNITVALUE4 NUMBER(19,4)
		,TECHUNITVALUE5 NUMBER(19,4)
		,TECHUNITVALUE6 NUMBER(19,4)
		,TECHUNITVALUE7 NUMBER(19,4)
		,TECHUNITVALUE8 NUMBER(19,4)
		,TECHUNITVALUE9 NUMBER(19,4)
		,TECHUNITVALUE10 NUMBER(19,4)
		,TECHUNITVALUE11 NUMBER(19,4)
		,TECHUNITVALUE12 NUMBER(19,4)
		,SITECODE VARCHAR(3) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.EXTENSION
		,T.PROCEDURECODE
		,T.FSPROCDESCRIPTION
		,T.SV
		,T.STAR
		,T.PANEL
		,T.IP
		,T.MULT
		,T.ASSTSURGEON
		,T.SECTIONFLAG
		,T.FUP
		,T.BAV
		,T.PROCGROUP
		,T.VIEWTYPE
		,T.UNITVALUE1
		,T.UNITVALUE2
		,T.UNITVALUE3
		,T.UNITVALUE4
		,T.UNITVALUE5
		,T.UNITVALUE6
		,T.UNITVALUE7
		,T.UNITVALUE8
		,T.UNITVALUE9
		,T.UNITVALUE10
		,T.UNITVALUE11
		,T.UNITVALUE12
		,T.PROUNITVALUE1
		,T.PROUNITVALUE2
		,T.PROUNITVALUE3
		,T.PROUNITVALUE4
		,T.PROUNITVALUE5
		,T.PROUNITVALUE6
		,T.PROUNITVALUE7
		,T.PROUNITVALUE8
		,T.PROUNITVALUE9
		,T.PROUNITVALUE10
		,T.PROUNITVALUE11
		,T.PROUNITVALUE12
		,T.TECHUNITVALUE1
		,T.TECHUNITVALUE2
		,T.TECHUNITVALUE3
		,T.TECHUNITVALUE4
		,T.TECHUNITVALUE5
		,T.TECHUNITVALUE6
		,T.TECHUNITVALUE7
		,T.TECHUNITVALUE8
		,T.TECHUNITVALUE9
		,T.TECHUNITVALUE10
		,T.TECHUNITVALUE11
		,T.TECHUNITVALUE12
		,T.SITECODE
FROM src.FSProcedure T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		PROCEDURECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.FSProcedure
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		PROCEDURECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.EXTENSION = S.EXTENSION
	AND T.PROCEDURECODE = S.PROCEDURECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_FSProcedureMV(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,EXTENSION VARCHAR(3)
		,PROCEDURECODE VARCHAR(6)
		,EFFECTIVEDATE DATETIME
		,TERMINATIONDATE DATETIME
		,FSPROCDESCRIPTION VARCHAR(24)
		,SV VARCHAR(1)
		,STAR VARCHAR(1)
		,PANEL VARCHAR(1)
		,IP VARCHAR(1)
		,MULT VARCHAR(1)
		,ASSTSURGEON VARCHAR(1)
		,SECTIONFLAG VARCHAR(1)
		,FUP VARCHAR(3)
		,BAV NUMBER(5,0)
		,PROCGROUP VARCHAR(4)
		,VIEWTYPE NUMBER(5,0)
		,UNITVALUE NUMBER(19,4)
		,PROUNITVALUE NUMBER(19,4)
		,TECHUNITVALUE NUMBER(19,4)
		,SITECODE VARCHAR(3) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.EXTENSION
		,T.PROCEDURECODE
		,T.EFFECTIVEDATE
		,T.TERMINATIONDATE
		,T.FSPROCDESCRIPTION
		,T.SV
		,T.STAR
		,T.PANEL
		,T.IP
		,T.MULT
		,T.ASSTSURGEON
		,T.SECTIONFLAG
		,T.FUP
		,T.BAV
		,T.PROCGROUP
		,T.VIEWTYPE
		,T.UNITVALUE
		,T.PROUNITVALUE
		,T.TECHUNITVALUE
		,T.SITECODE
FROM src.FSProcedureMV T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		PROCEDURECODE,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.FSProcedureMV
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		PROCEDURECODE,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.EXTENSION = S.EXTENSION
	AND T.PROCEDURECODE = S.PROCEDURECODE
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_FSServiceCode(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,SERVICECODE VARCHAR(30)
		,GEOAREACODE VARCHAR(12)
		,EFFECTIVEDATE DATETIME
		,DESCRIPTION VARCHAR(255)
		,TERMDATE DATETIME
		,CODESOURCE VARCHAR(6)
		,CODEGROUP VARCHAR(12) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.SERVICECODE
		,T.GEOAREACODE
		,T.EFFECTIVEDATE
		,T.DESCRIPTION
		,T.TERMDATE
		,T.CODESOURCE
		,T.CODEGROUP
FROM src.FSServiceCode T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		SERVICECODE,
		GEOAREACODE,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.FSServiceCode
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		SERVICECODE,
		GEOAREACODE,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.SERVICECODE = S.SERVICECODE
	AND T.GEOAREACODE = S.GEOAREACODE
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ICD_Diagnosis(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ICDDIAGNOSISID NUMBER(10,0)
		,CODE VARCHAR(8)
		,SHORTDESC VARCHAR(60)
		,DESCRIPTION VARCHAR(300)
		,DETAILED BOOLEAN )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ICDDIAGNOSISID
		,T.CODE
		,T.SHORTDESC
		,T.DESCRIPTION
		,T.DETAILED
FROM src.ICD_Diagnosis T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ICDDIAGNOSISID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ICD_Diagnosis
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ICDDIAGNOSISID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ICDDIAGNOSISID = S.ICDDIAGNOSISID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Insurer(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,INSURERTYPE VARCHAR(1)
		,INSURERSEQ NUMBER(10,0)
		,JURISDICTION VARCHAR(2)
		,STATEID VARCHAR(30)
		,TIN VARCHAR(9)
		,ALTID VARCHAR(18)
		,NAME VARCHAR(30)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(20)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,FAXNUM VARCHAR(20)
		,NAICCOCODE VARCHAR(6)
		,NAICGPCODE VARCHAR(30)
		,NCCICARRIERCODE VARCHAR(5)
		,NCCIGROUPCODE VARCHAR(5) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.INSURERTYPE
		,T.INSURERSEQ
		,T.JURISDICTION
		,T.STATEID
		,T.TIN
		,T.ALTID
		,T.NAME
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.FAXNUM
		,T.NAICCOCODE
		,T.NAICGPCODE
		,T.NCCICARRIERCODE
		,T.NCCIGROUPCODE
FROM src.Insurer T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		INSURERTYPE,
		INSURERSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Insurer
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		INSURERTYPE,
		INSURERSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.INSURERTYPE = S.INSURERTYPE
	AND T.INSURERSEQ = S.INSURERSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Jurisdiction(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTIONID VARCHAR(2)
		,NAME VARCHAR(30)
		,POSTABLECODE VARCHAR(2)
		,TOSTABLECODE VARCHAR(2)
		,TOBTABLECODE VARCHAR(2)
		,PROVTYPETABLECODE VARCHAR(2)
		,HOSPITAL VARCHAR(1)
		,PROVSPCLTABLECODE VARCHAR(2)
		,DAYSTOPAY NUMBER(5,0)
		,DAYSTOPAYQUALIFY VARCHAR(2)
		,OUTPATIENTFS VARCHAR(1)
		,PROCFILEVER VARCHAR(1)
		,ANESTUNIT NUMBER(5,0)
		,ANESTRNDUP NUMBER(5,0)
		,ANESTFORMAT VARCHAR(1)
		,STATEMANDATESSN VARCHAR(1)
		,ICDEDITION NUMBER(5,0)
		,ICD10COMPLIANCEDATE DATETIME
		,EBILLSDAYSTOPAY NUMBER(5,0)
		,EBILLSDAYSTOPAYQUALIFY VARCHAR(2)
		,DISPUTEDAYSTOPAY NUMBER(5,0)
		,DISPUTEDAYSTOPAYQUALIFY VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTIONID
		,T.NAME
		,T.POSTABLECODE
		,T.TOSTABLECODE
		,T.TOBTABLECODE
		,T.PROVTYPETABLECODE
		,T.HOSPITAL
		,T.PROVSPCLTABLECODE
		,T.DAYSTOPAY
		,T.DAYSTOPAYQUALIFY
		,T.OUTPATIENTFS
		,T.PROCFILEVER
		,T.ANESTUNIT
		,T.ANESTRNDUP
		,T.ANESTFORMAT
		,T.STATEMANDATESSN
		,T.ICDEDITION
		,T.ICD10COMPLIANCEDATE
		,T.EBILLSDAYSTOPAY
		,T.EBILLSDAYSTOPAYQUALIFY
		,T.DISPUTEDAYSTOPAY
		,T.DISPUTEDAYSTOPAYQUALIFY
FROM src.Jurisdiction T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTIONID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Jurisdiction
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTIONID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTIONID = S.JURISDICTIONID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Line(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,LINESEQ NUMBER(5,0)
		,DUPCLIENTCODE VARCHAR(4)
		,DUPBILLSEQ NUMBER(10,0)
		,DOS DATETIME
		,PROCTYPE VARCHAR(1)
		,PPOOVERRIDE NUMBER(19,4)
		,CLIENTLINETYPE VARCHAR(5)
		,PROVTYPE VARCHAR(3)
		,URQTYALLOW NUMBER(5,0)
		,URQTYSVD NUMBER(5,0)
		,DOSTO DATETIME
		,URALLOW NUMBER(19,4)
		,URCASESEQ NUMBER(10,0)
		,REVENUECODE VARCHAR(4)
		,PROCBILLED VARCHAR(30)
		,URREVIEWSEQ NUMBER(5,0)
		,URPRIORITY NUMBER(5,0)
		,PROCCODE VARCHAR(30)
		,UNITS NUMBER(11,3)
		,ALLOWUNITS NUMBER(11,3)
		,CHARGE NUMBER(19,4)
		,BRALLOW NUMBER(19,4)
		,PPOALLOW NUMBER(19,4)
		,PAYOVERRIDE NUMBER(19,4)
		,PROCNEW VARCHAR(30)
		,ADJALLOW NUMBER(19,4)
		,REEVALAMOUNT NUMBER(19,4)
		,POS VARCHAR(2)
		,DXREFLIST VARCHAR(30)
		,TOS VARCHAR(2)
		,REEVALTXTPTR NUMBER(5,0)
		,FSAMOUNT NUMBER(19,4)
		,UCAMOUNT NUMBER(19,4)
		,COPAY NUMBER(19,4)
		,DEDUCTIBLE NUMBER(19,4)
		,COSTTOCHARGERATIO FLOAT(53)
		,RXNUMBER VARCHAR(20)
		,DAYSSUPPLY NUMBER(5,0)
		,DXREF VARCHAR(4)
		,EXTERNALID VARCHAR(30)
		,ITEMCOSTINVOICED NUMBER(19,4)
		,ITEMCOSTADDITIONAL NUMBER(19,4)
		,REFILL VARCHAR(1)
		,PROVSECONDARYID VARCHAR(30)
		,CERTIFICATION VARCHAR(1)
		,REEVALTXTSRC VARCHAR(3)
		,BASISOFCOST VARCHAR(1)
		,DMEFREQUENCYCODE VARCHAR(1)
		,PROVRENDERINGNPI VARCHAR(10)
		,PROVSECONDARYIDQUALIFIER VARCHAR(2)
		,PAIDPROCCODE VARCHAR(30)
		,PAIDPROCTYPE VARCHAR(3)
		,URSTATUS VARCHAR(1)
		,URWORKFLOWSTATUS VARCHAR(1)
		,OVERRIDEALLOWUNITS NUMBER(11,3)
		,LINESEQORGREV NUMBER(5,0)
		,ODGFLAG NUMBER(5,0)
		,COMPOUNDDRUGINDICATOR VARCHAR(1)
		,PRIORAUTHNUM VARCHAR(50)
		,REEVALPARAGRAPHJURISDICTION VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.LINESEQ
		,T.DUPCLIENTCODE
		,T.DUPBILLSEQ
		,T.DOS
		,T.PROCTYPE
		,T.PPOOVERRIDE
		,T.CLIENTLINETYPE
		,T.PROVTYPE
		,T.URQTYALLOW
		,T.URQTYSVD
		,T.DOSTO
		,T.URALLOW
		,T.URCASESEQ
		,T.REVENUECODE
		,T.PROCBILLED
		,T.URREVIEWSEQ
		,T.URPRIORITY
		,T.PROCCODE
		,T.UNITS
		,T.ALLOWUNITS
		,T.CHARGE
		,T.BRALLOW
		,T.PPOALLOW
		,T.PAYOVERRIDE
		,T.PROCNEW
		,T.ADJALLOW
		,T.REEVALAMOUNT
		,T.POS
		,T.DXREFLIST
		,T.TOS
		,T.REEVALTXTPTR
		,T.FSAMOUNT
		,T.UCAMOUNT
		,T.COPAY
		,T.DEDUCTIBLE
		,T.COSTTOCHARGERATIO
		,T.RXNUMBER
		,T.DAYSSUPPLY
		,T.DXREF
		,T.EXTERNALID
		,T.ITEMCOSTINVOICED
		,T.ITEMCOSTADDITIONAL
		,T.REFILL
		,T.PROVSECONDARYID
		,T.CERTIFICATION
		,T.REEVALTXTSRC
		,T.BASISOFCOST
		,T.DMEFREQUENCYCODE
		,T.PROVRENDERINGNPI
		,T.PROVSECONDARYIDQUALIFIER
		,T.PAIDPROCCODE
		,T.PAIDPROCTYPE
		,T.URSTATUS
		,T.URWORKFLOWSTATUS
		,T.OVERRIDEALLOWUNITS
		,T.LINESEQORGREV
		,T.ODGFLAG
		,T.COMPOUNDDRUGINDICATOR
		,T.PRIORAUTHNUM
		,T.REEVALPARAGRAPHJURISDICTION
FROM src.Line T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Line
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.LINESEQ = S.LINESEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_LineMod(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,LINESEQ NUMBER(5,0)
		,MODSEQ NUMBER(5,0)
		,USERENTERED VARCHAR(1)
		,MODSITECODE VARCHAR(3)
		,MODIFIER VARCHAR(6)
		,REDUCTIONCODE NUMBER(5,0)
		,MODSUBSET VARCHAR(2)
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,REASONCLIENTCODE VARCHAR(4)
		,REASONBILLSEQ NUMBER(10,0)
		,REASONLINESEQ NUMBER(5,0)
		,REASONTYPE VARCHAR(1)
		,REASONVALUE VARCHAR(30) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.LINESEQ
		,T.MODSEQ
		,T.USERENTERED
		,T.MODSITECODE
		,T.MODIFIER
		,T.REDUCTIONCODE
		,T.MODSUBSET
		,T.MODUSERID
		,T.MODDATE
		,T.REASONCLIENTCODE
		,T.REASONBILLSEQ
		,T.REASONLINESEQ
		,T.REASONTYPE
		,T.REASONVALUE
FROM src.LineMod T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		MODSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.LineMod
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		MODSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.LINESEQ = S.LINESEQ
	AND T.MODSEQ = S.MODSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_LineReduction(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,LINESEQ NUMBER(5,0)
		,REDUCTIONCODE NUMBER(5,0)
		,REDUCTIONAMOUNT NUMBER(19,4)
		,OVERRIDEAMOUNT NUMBER(19,4)
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.LINESEQ
		,T.REDUCTIONCODE
		,T.REDUCTIONAMOUNT
		,T.OVERRIDEAMOUNT
		,T.MODUSERID
FROM src.LineReduction T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		REDUCTIONCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.LineReduction
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		LINESEQ,
		REDUCTIONCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.LINESEQ = S.LINESEQ
	AND T.REDUCTIONCODE = S.REDUCTIONCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_MedicareICQM(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,MDICQMSEQ NUMBER(10,0)
		,PROVIDERNUM VARCHAR(6)
		,PROVSUFFIX VARCHAR(1)
		,SERVICECODE VARCHAR(25)
		,HCPCS VARCHAR(5)
		,REVENUE VARCHAR(3)
		,MEDICAREICQMDESCRIPTION VARCHAR(40)
		,IP1995 NUMBER(10,0)
		,OP1995 NUMBER(10,0)
		,IP1996 NUMBER(10,0)
		,OP1996 NUMBER(10,0)
		,IP1997 NUMBER(10,0)
		,OP1997 NUMBER(10,0)
		,IP1998 NUMBER(10,0)
		,OP1998 NUMBER(10,0)
		,NPI VARCHAR(10) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.MDICQMSEQ
		,T.PROVIDERNUM
		,T.PROVSUFFIX
		,T.SERVICECODE
		,T.HCPCS
		,T.REVENUE
		,T.MEDICAREICQMDESCRIPTION
		,T.IP1995
		,T.OP1995
		,T.IP1996
		,T.OP1996
		,T.IP1997
		,T.OP1997
		,T.IP1998
		,T.OP1998
		,T.NPI
FROM src.MedicareICQM T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		MDICQMSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.MedicareICQM
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		MDICQMSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.MDICQMSEQ = S.MDICQMSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Medispan(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
 OdsPostingGroupAuditId NUMBER(10,0)
	 , OdsCustomerId NUMBER(10,0)
	 , OdsCreateDate DATETIME
	 , OdsSnapshotDate DATETIME
	 , OdsRowIsCurrent INT
	 , OdsHashbytesValue BINARY(8000)
	 , DmlOperation VARCHAR(1)
	 , NDC VARCHAR (11)
	 , DEA VARCHAR (5)
	 , Name1 VARCHAR (25)
	 , Name2 VARCHAR (4) 
	 , Name3 VARCHAR (11) 
	 , Strength NUMBER (10,0) 
	 , Unit NUMBER (10,0) 
	 , Pkg VARCHAR (2) 
	 , Factor NUMBER (5,0) 
	 , GenericDrug VARCHAR (1) 
	 , Desicode VARCHAR (1) 
	 , Rxotc VARCHAR (1) 
	 , GPI VARCHAR (14) 
	 , Awp1 NUMBER (10,0) 
	 , Awp0 NUMBER (10,0) 
	 , Awp2 NUMBER (10,0) 
	 , EffectiveDt2 DATETIME 
	 , EffectiveDt1 DATETIME
	 , EffectiveDt0 DATETIME
	 , FDAEquivalence VARCHAR (3)
	 , NDCFormat VARCHAR (1)
	 , RestrictDrugs VARCHAR (1)
	 , GPPC VARCHAR (8)
	 , Status VARCHAR (1)
	 , UpdateDate DATETIME
	 , AAWP NUMBER (10,0)
	 , GAWP NUMBER (10,0)
	 , RepackagedCode VARCHAR (2))
AS
$$
SELECT 
	 T.OdsPostingGroupAuditId
	,T.OdsCustomerId
	,T.OdsCreateDate
	,T.OdsSnapshotDate
	,T.OdsRowIsCurrent
	,T.OdsHashbytesValue
	,T.DmlOperation
	,T.NDC
	,T.DEA
	,T.Name1
	,T.Name2
	,T.Name3
	,T.Strength
	,T.Unit
	,T.Pkg
	,T.Factor
	,T.GenericDrug
	,T.Desicode
	,T.Rxotc
	,T.GPI
	,T.Awp1
	,T.Awp0
	,T.Awp2
	,T.EffectiveDt2
	,T.EffectiveDt1
	,T.EffectiveDt0
	,T.FDAEquivalence
	,T.NDCFormat
	,T.RestrictDrugs
	,T.GPPC
	,T.Status
	,T.UpdateDate
	,T.AAWP
	,T.GAWP
	,T.RepackagedCode
FROM src.Medispan T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		NDC,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Medispan
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		NDC) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.NDC = S.NDC
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Modifier(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,CODE VARCHAR(6)
		,SITECODE VARCHAR(3)
		,FUNC VARCHAR(1)
		,VAL VARCHAR(3)
		,MODTYPE VARCHAR(1)
		,GROUPCODE VARCHAR(2)
		,MODDESCRIPTION VARCHAR(30)
		,MODCOMMENT1 VARCHAR(70)
		,MODCOMMENT2 VARCHAR(70)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,STATUTE VARCHAR(30)
		,REMARK1 VARCHAR(6)
		,REMARKQUALIFIER1 VARCHAR(2)
		,REMARK2 VARCHAR(6)
		,REMARKQUALIFIER2 VARCHAR(2)
		,REMARK3 VARCHAR(6)
		,REMARKQUALIFIER3 VARCHAR(2)
		,REMARK4 VARCHAR(6)
		,REMARKQUALIFIER4 VARCHAR(2)
		,CBREREASONID NUMBER(10,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.CODE
		,T.SITECODE
		,T.FUNC
		,T.VAL
		,T.MODTYPE
		,T.GROUPCODE
		,T.MODDESCRIPTION
		,T.MODCOMMENT1
		,T.MODCOMMENT2
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
		,T.STATUTE
		,T.REMARK1
		,T.REMARKQUALIFIER1
		,T.REMARK2
		,T.REMARKQUALIFIER2
		,T.REMARK3
		,T.REMARKQUALIFIER3
		,T.REMARK4
		,T.REMARKQUALIFIER4
		,T.CBREREASONID
FROM src.Modifier T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		CODE,
		SITECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Modifier
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		CODE,
		SITECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.CODE = S.CODE
	AND T.SITECODE = S.SITECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ODGData(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ICDDIAGNOSISID NUMBER(10,0)
		,PROCEDURECODE VARCHAR(30)
		,ICDDESCRIPTION VARCHAR(300)
		,PROCEDUREDESCRIPTION VARCHAR(800)
		,INCIDENCERATE NUMBER(19,4)
		,PROCEDUREFREQUENCY NUMBER(19,4)
		,VISITS25PERC NUMBER(5,0)
		,VISITS50PERC NUMBER(5,0)
		,VISITS75PERC NUMBER(5,0)
		,VISITSMEAN NUMBER(19,4)
		,COSTSMEAN NUMBER(19,4)
		,AUTOAPPROVALCODE VARCHAR(5)
		,PAYMENTFLAG NUMBER(5,0)
		,COSTPERVISIT NUMBER(19,4) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ICDDIAGNOSISID
		,T.PROCEDURECODE
		,T.ICDDESCRIPTION
		,T.PROCEDUREDESCRIPTION
		,T.INCIDENCERATE
		,T.PROCEDUREFREQUENCY
		,T.VISITS25PERC
		,T.VISITS50PERC
		,T.VISITS75PERC
		,T.VISITSMEAN
		,T.COSTSMEAN
		,T.AUTOAPPROVALCODE
		,T.PAYMENTFLAG
		,T.COSTPERVISIT
FROM src.ODGData T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ICDDIAGNOSISID,
		PROCEDURECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ODGData
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ICDDIAGNOSISID,
		PROCEDURECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ICDDIAGNOSISID = S.ICDDIAGNOSISID
	AND T.PROCEDURECODE = S.PROCEDURECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Pend(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,PENDSEQ NUMBER(5,0)
		,PENDDATE DATETIME
		,RELEASEFLAG VARCHAR(1)
		,PENDTOID VARCHAR(13)
		,PRIORITY VARCHAR(1)
		,RELEASEDATE DATETIME
		,REASONCODE VARCHAR(8)
		,PENDBYUSERID VARCHAR(2)
		,RELEASEBYUSERID VARCHAR(2)
		,AUTOPENDFLAG VARCHAR(1)
		,RULEID VARCHAR(5)
		,WFTASKSEQ NUMBER(10,0)
		,RELEASEDBYEXTERNALUSERNAME VARCHAR(128) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.PENDSEQ
		,T.PENDDATE
		,T.RELEASEFLAG
		,T.PENDTOID
		,T.PRIORITY
		,T.RELEASEDATE
		,T.REASONCODE
		,T.PENDBYUSERID
		,T.RELEASEBYUSERID
		,T.AUTOPENDFLAG
		,T.RULEID
		,T.WFTASKSEQ
		,T.RELEASEDBYEXTERNALUSERNAME
FROM src.Pend T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		PENDSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Pend
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		PENDSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.PENDSEQ = S.PENDSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PendComment(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLIENTCODE VARCHAR(4)
		,BILLSEQ NUMBER(10,0)
		,PENDSEQ NUMBER(5,0)
		,PENDCOMMENTSEQ NUMBER(5,0)
		,PENDCOMMENT VARCHAR(7500)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,CREATEDBYEXTERNALUSERNAME VARCHAR(128) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLIENTCODE
		,T.BILLSEQ
		,T.PENDSEQ
		,T.PENDCOMMENTSEQ
		,T.PENDCOMMENT
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.CREATEDBYEXTERNALUSERNAME
FROM src.PendComment T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		PENDSEQ,
		PENDCOMMENTSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PendComment
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLIENTCODE,
		BILLSEQ,
		PENDSEQ,
		PENDCOMMENTSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLIENTCODE = S.CLIENTCODE
	AND T.BILLSEQ = S.BILLSEQ
	AND T.PENDSEQ = S.PENDSEQ
	AND T.PENDCOMMENTSEQ = S.PENDCOMMENTSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Policy(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,POLICYSEQ NUMBER(10,0)
		,NAME VARCHAR(60)
		,EXTERNALID VARCHAR(20)
		,POLICYID VARCHAR(30)
		,ADMINKEY VARCHAR(40)
		,LOCATIONCODE VARCHAR(10)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(20)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,FAXNUM VARCHAR(20)
		,EFFECTIVEDATE DATETIME
		,TERMINATIONDATE DATETIME
		,TIN VARCHAR(9)
		,STATETAXID VARCHAR(30)
		,DEPTINDUSRELNUM VARCHAR(20)
		,EQOPPINDICATOR VARCHAR(1)
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MCOFLAG VARCHAR(1)
		,MCOSTARTDATE DATETIME
		,FEERATECTRLEX VARCHAR(4)
		,CREATEBY VARCHAR(2)
		,FEERATECTRLIN VARCHAR(4)
		,CREATEDATE DATETIME
		,SELFINSURED VARCHAR(1)
		,NAICSCODE VARCHAR(15)
		,MONTHLYPREMIUM NUMBER(19,4)
		,PPOPROFILESITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,SALESTAXEXEMPT VARCHAR(1)
		,RECEIPTHANDLINGCODE VARCHAR(1)
		,TXNONSUBSCRIB VARCHAR(1)
		,SUBDIVISIONNAME VARCHAR(60)
		,POLICYCOPAYAMOUNT NUMBER(19,4)
		,POLICYCOPAYPCT NUMBER(5,0)
		,POLICYDEDUCTIBLE NUMBER(19,4)
		,POLICYLIMITAMOUNT NUMBER(19,4)
		,POLICYTIMELIMIT NUMBER(5,0)
		,POLICYLIMITWARNINGPCT NUMBER(5,0)
		,POLICYLIMITRESULT VARCHAR(1)
		,URPROFILEID VARCHAR(8) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.POLICYSEQ
		,T.NAME
		,T.EXTERNALID
		,T.POLICYID
		,T.ADMINKEY
		,T.LOCATIONCODE
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.FAXNUM
		,T.EFFECTIVEDATE
		,T.TERMINATIONDATE
		,T.TIN
		,T.STATETAXID
		,T.DEPTINDUSRELNUM
		,T.EQOPPINDICATOR
		,T.MODUSERID
		,T.MODDATE
		,T.MCOFLAG
		,T.MCOSTARTDATE
		,T.FEERATECTRLEX
		,T.CREATEBY
		,T.FEERATECTRLIN
		,T.CREATEDATE
		,T.SELFINSURED
		,T.NAICSCODE
		,T.MONTHLYPREMIUM
		,T.PPOPROFILESITECODE
		,T.PPOPROFILEID
		,T.SALESTAXEXEMPT
		,T.RECEIPTHANDLINGCODE
		,T.TXNONSUBSCRIB
		,T.SUBDIVISIONNAME
		,T.POLICYCOPAYAMOUNT
		,T.POLICYCOPAYPCT
		,T.POLICYDEDUCTIBLE
		,T.POLICYLIMITAMOUNT
		,T.POLICYTIMELIMIT
		,T.POLICYLIMITWARNINGPCT
		,T.POLICYLIMITRESULT
		,T.URPROFILEID
FROM src.Policy T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		POLICYSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Policy
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		POLICYSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.POLICYSEQ = S.POLICYSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PolicyInsurer(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,CLAIMSYSSUBSET VARCHAR(4)
		,POLICYSEQ NUMBER(10,0)
		,JURISDICTION VARCHAR(2)
		,INSURERTYPE VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,INSURERSEQ NUMBER(10,0)
		,TERMINATIONDATE DATETIME )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.CLAIMSYSSUBSET
		,T.POLICYSEQ
		,T.JURISDICTION
		,T.INSURERTYPE
		,T.EFFECTIVEDATE
		,T.INSURERSEQ
		,T.TERMINATIONDATE
FROM src.PolicyInsurer T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		POLICYSEQ,
		JURISDICTION,
		INSURERTYPE,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PolicyInsurer
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		CLAIMSYSSUBSET,
		POLICYSEQ,
		JURISDICTION,
		INSURERTYPE,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.CLAIMSYSSUBSET = S.CLAIMSYSSUBSET
	AND T.POLICYSEQ = S.POLICYSEQ
	AND T.JURISDICTION = S.JURISDICTION
	AND T.INSURERTYPE = S.INSURERTYPE
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOContract(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPONETWORKID VARCHAR(2)
		,PPOCONTRACTID VARCHAR(30)
		,SITECODE VARCHAR(3)
		,TIN VARCHAR(9)
		,ALTERNATETIN VARCHAR(9)
		,STARTDATE DATETIME
		,ENDDATE DATETIME
		,OPLINEITEMDEFAULTDISCOUNT NUMBER(5,0)
		,COMPANYNAME VARCHAR(35)
		,FIRST VARCHAR(35)
		,GROUPCODE VARCHAR(3)
		,GROUPNAME VARCHAR(40)
		,OPDISCOUNTBASEVALUE VARCHAR(1)
		,OPOFFFS NUMBER(5,0)
		,OPOFFUCR NUMBER(5,0)
		,OPOFFCHARGE NUMBER(5,0)
		,OPEFFECTIVEDATE DATETIME
		,OPADDITIONALDISCOUNTOFFLINK NUMBER(5,0)
		,OPTERMINATIONDATE DATETIME
		,OPUCRPERCENTILE NUMBER(5,0)
		,OPCONDITION VARCHAR(2)
		,IPDISCOUNTBASEVALUE VARCHAR(1)
		,IPOFFFS NUMBER(5,0)
		,IPOFFUCR NUMBER(5,0)
		,IPOFFCHARGE NUMBER(5,0)
		,IPEFFECTIVEDATE DATETIME
		,IPTERMINATIONDATE DATETIME
		,IPCONDITION VARCHAR(2)
		,IPSTOPCAPAMOUNT NUMBER(19,4)
		,IPSTOPCAPRATE NUMBER(5,0)
		,MINDISC NUMBER(10,4)
		,MAXDISC NUMBER(10,4)
		,MEDICALPERDIEM NUMBER(10,4)
		,SURGICALPERDIEM NUMBER(10,4)
		,ICUPERDIEM NUMBER(10,4)
		,PSYCHIATRICPERDIEM NUMBER(10,4)
		,MISCPARM VARCHAR(2)
		,SPCCODE VARCHAR(1)
		,PPOTYPE VARCHAR(1)
		,BILLINGADDRESS1 VARCHAR(30)
		,BILLINGADDRESS2 VARCHAR(30)
		,BILLINGCITY VARCHAR(20)
		,BILLINGSTATE VARCHAR(2)
		,BILLINGZIP VARCHAR(9)
		,PRACTICEADDRESS1 VARCHAR(30)
		,PRACTICEADDRESS2 VARCHAR(30)
		,PRACTICECITY VARCHAR(20)
		,PRACTICESTATE VARCHAR(2)
		,PRACTICEZIP VARCHAR(9)
		,PHONENUM VARCHAR(10)
		,OUTFILE VARCHAR(12)
		,INPATFILE VARCHAR(12)
		,URCOORDINATORFLAG VARCHAR(1)
		,EXCLUSIVEPPOORGFLAG VARCHAR(1)
		,STOPLOSSTYPECODE VARCHAR(4)
		,BR_RNEDISCOUNT NUMBER(5,0)
		,MODDATE DATETIME
		,EXPORTFLAG VARCHAR(1)
		,OPMANUALINDICATOR VARCHAR(1)
		,OPSTOPCAPAMOUNT NUMBER(19,4)
		,OPSTOPCAPRATE NUMBER(5,0)
		,SPECIALTY1 VARCHAR(4)
		,SPECIALTY2 VARCHAR(4)
		,LESSOROFTHRESHOLD NUMBER(5,0)
		,BILATERALDISCOUNT NUMBER(5,0)
		,SURGERYDISCOUNT2 NUMBER(5,0)
		,SURGERYDISCOUNT3 NUMBER(5,0)
		,SURGERYDISCOUNT4 NUMBER(5,0)
		,SURGERYDISCOUNT5 NUMBER(5,0)
		,MATRIX VARCHAR(1)
		,PROVTYPE VARCHAR(5)
		,ALLINCLUSIVE VARCHAR(1)
		,REGION VARCHAR(4)
		,PAYMENTADDRESSFLAG VARCHAR(1)
		,MEDICALGROUP VARCHAR(1)
		,MEDICALGROUPCODE VARCHAR(4)
		,RATEMODE VARCHAR(1)
		,PRACTICECOUNTY VARCHAR(25)
		,FIPSCOUNTYCODE VARCHAR(3)
		,PRIMARYCAREFLAG VARCHAR(1)
		,PPOCONTRACTIDOLD VARCHAR(14)
		,MULTISURG VARCHAR(1)
		,BILEVEL VARCHAR(1)
		,DRGRATE NUMBER(10,4)
		,DRGGREATERTHANBC NUMBER(5,0)
		,DRGMINPERCENTBC NUMBER(5,0)
		,CARVEOUT VARCHAR(1)
		,PPOTOFSSEQ NUMBER(10,0)
		,LICENSENUM VARCHAR(30)
		,MEDICARENUM VARCHAR(20)
		,NPI VARCHAR(10) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPONETWORKID
		,T.PPOCONTRACTID
		,T.SITECODE
		,T.TIN
		,T.ALTERNATETIN
		,T.STARTDATE
		,T.ENDDATE
		,T.OPLINEITEMDEFAULTDISCOUNT
		,T.COMPANYNAME
		,T.FIRST
		,T.GROUPCODE
		,T.GROUPNAME
		,T.OPDISCOUNTBASEVALUE
		,T.OPOFFFS
		,T.OPOFFUCR
		,T.OPOFFCHARGE
		,T.OPEFFECTIVEDATE
		,T.OPADDITIONALDISCOUNTOFFLINK
		,T.OPTERMINATIONDATE
		,T.OPUCRPERCENTILE
		,T.OPCONDITION
		,T.IPDISCOUNTBASEVALUE
		,T.IPOFFFS
		,T.IPOFFUCR
		,T.IPOFFCHARGE
		,T.IPEFFECTIVEDATE
		,T.IPTERMINATIONDATE
		,T.IPCONDITION
		,T.IPSTOPCAPAMOUNT
		,T.IPSTOPCAPRATE
		,T.MINDISC
		,T.MAXDISC
		,T.MEDICALPERDIEM
		,T.SURGICALPERDIEM
		,T.ICUPERDIEM
		,T.PSYCHIATRICPERDIEM
		,T.MISCPARM
		,T.SPCCODE
		,T.PPOTYPE
		,T.BILLINGADDRESS1
		,T.BILLINGADDRESS2
		,T.BILLINGCITY
		,T.BILLINGSTATE
		,T.BILLINGZIP
		,T.PRACTICEADDRESS1
		,T.PRACTICEADDRESS2
		,T.PRACTICECITY
		,T.PRACTICESTATE
		,T.PRACTICEZIP
		,T.PHONENUM
		,T.OUTFILE
		,T.INPATFILE
		,T.URCOORDINATORFLAG
		,T.EXCLUSIVEPPOORGFLAG
		,T.STOPLOSSTYPECODE
		,T.BR_RNEDISCOUNT
		,T.MODDATE
		,T.EXPORTFLAG
		,T.OPMANUALINDICATOR
		,T.OPSTOPCAPAMOUNT
		,T.OPSTOPCAPRATE
		,T.SPECIALTY1
		,T.SPECIALTY2
		,T.LESSOROFTHRESHOLD
		,T.BILATERALDISCOUNT
		,T.SURGERYDISCOUNT2
		,T.SURGERYDISCOUNT3
		,T.SURGERYDISCOUNT4
		,T.SURGERYDISCOUNT5
		,T.MATRIX
		,T.PROVTYPE
		,T.ALLINCLUSIVE
		,T.REGION
		,T.PAYMENTADDRESSFLAG
		,T.MEDICALGROUP
		,T.MEDICALGROUPCODE
		,T.RATEMODE
		,T.PRACTICECOUNTY
		,T.FIPSCOUNTYCODE
		,T.PRIMARYCAREFLAG
		,T.PPOCONTRACTIDOLD
		,T.MULTISURG
		,T.BILEVEL
		,T.DRGRATE
		,T.DRGGREATERTHANBC
		,T.DRGMINPERCENTBC
		,T.CARVEOUT
		,T.PPOTOFSSEQ
		,T.LICENSENUM
		,T.MEDICARENUM
		,T.NPI
FROM src.PPOContract T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPONETWORKID,
		PPOCONTRACTID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOContract
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPONETWORKID,
		PPOCONTRACTID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPONETWORKID = S.PPONETWORKID
	AND T.PPOCONTRACTID = S.PPOCONTRACTID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPONetwork(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPONETWORKID VARCHAR(2)
		,NAME VARCHAR(30)
		,TIN VARCHAR(10)
		,ZIP VARCHAR(10)
		,STATE VARCHAR(2)
		,CITY VARCHAR(15)
		,STREET VARCHAR(30)
		,PHONENUM VARCHAR(20)
		,PPONETWORKCOMMENT VARCHAR(6000)
		,ALLOWMAINT VARCHAR(1)
		,REQEXTPPO VARCHAR(1)
		,DEMORATES VARCHAR(1)
		,PRINTASPROVIDER VARCHAR(1)
		,PPOTYPE VARCHAR(3)
		,PPOVERSION VARCHAR(1)
		,PPOBRIDGEEXISTS VARCHAR(1)
		,USESDRG VARCHAR(1)
		,PPOTOOTHER VARCHAR(1)
		,SUBNETWORKINDICATOR VARCHAR(1)
		,EMAILADDRESS VARCHAR(255)
		,WEBSITE VARCHAR(255)
		,BILLCONTROLSEQ NUMBER(5,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPONETWORKID
		,T.NAME
		,T.TIN
		,T.ZIP
		,T.STATE
		,T.CITY
		,T.STREET
		,T.PHONENUM
		,T.PPONETWORKCOMMENT
		,T.ALLOWMAINT
		,T.REQEXTPPO
		,T.DEMORATES
		,T.PRINTASPROVIDER
		,T.PPOTYPE
		,T.PPOVERSION
		,T.PPOBRIDGEEXISTS
		,T.USESDRG
		,T.PPOTOOTHER
		,T.SUBNETWORKINDICATOR
		,T.EMAILADDRESS
		,T.WEBSITE
		,T.BILLCONTROLSEQ
FROM src.PPONetwork T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPONETWORKID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPONetwork
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPONETWORKID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPONETWORKID = S.PPONETWORKID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOProfile(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,SITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,PROFILEDESC VARCHAR(50)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,SMARTSEARCHPAGEMAX NUMBER(5,0)
		,JURISDICTIONSTACKEXCLUSIVE VARCHAR(1)
		,REEVALFULLSTACKWHENORIGALLOWNOHIT VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.SITECODE
		,T.PPOPROFILEID
		,T.PROFILEDESC
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
		,T.SMARTSEARCHPAGEMAX
		,T.JURISDICTIONSTACKEXCLUSIVE
		,T.REEVALFULLSTACKWHENORIGALLOWNOHIT
FROM src.PPOProfile T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		SITECODE,
		PPOPROFILEID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOProfile
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		SITECODE,
		PPOPROFILEID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.SITECODE = S.SITECODE
	AND T.PPOPROFILEID = S.PPOPROFILEID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOProfileHistory(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPOPROFILEHISTORYSEQ NUMBER(19,0)
		,RECORDDELETED BOOLEAN
		,LOGDATETIME DATETIME
		,LOGINAME VARCHAR(256)
		,SITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,PROFILEDESC VARCHAR(50)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,SMARTSEARCHPAGEMAX NUMBER(5,0)
		,JURISDICTIONSTACKEXCLUSIVE VARCHAR(1)
		,REEVALFULLSTACKWHENORIGALLOWNOHIT VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPOPROFILEHISTORYSEQ
		,T.RECORDDELETED
		,T.LOGDATETIME
		,T.LOGINAME
		,T.SITECODE
		,T.PPOPROFILEID
		,T.PROFILEDESC
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
		,T.SMARTSEARCHPAGEMAX
		,T.JURISDICTIONSTACKEXCLUSIVE
		,T.REEVALFULLSTACKWHENORIGALLOWNOHIT
FROM src.PPOProfileHistory T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPOPROFILEHISTORYSEQ,
		SITECODE,
		PPOPROFILEID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOProfileHistory
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPOPROFILEHISTORYSEQ,
		SITECODE,
		PPOPROFILEID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPOPROFILEHISTORYSEQ = S.PPOPROFILEHISTORYSEQ
	AND T.SITECODE = S.SITECODE
	AND T.PPOPROFILEID = S.PPOPROFILEID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOProfileNetworks(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPOPROFILESITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,PROFILEREGIONSITECODE VARCHAR(3)
		,PROFILEREGIONID NUMBER(10,0)
		,NETWORKORDER NUMBER(5,0)
		,PPONETWORKID VARCHAR(2)
		,SEARCHLOGIC VARCHAR(1)
		,VERIFICATION VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,TERMINATIONDATE DATETIME
		,JURISDICTIONIND VARCHAR(1)
		,JURISDICTIONINSURERSEQ NUMBER(10,0)
		,JURISDICTIONUSEONLY VARCHAR(1)
		,PPOSSTINREQ VARCHAR(1)
		,PPOSSLICREQ VARCHAR(1)
		,DEFAULTEXTENDEDSEARCHES NUMBER(5,0)
		,DEFAULTEXTENDEDFILTERS NUMBER(5,0)
		,SEVEREDTIES VARCHAR(1)
		,POS VARCHAR(500) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPOPROFILESITECODE
		,T.PPOPROFILEID
		,T.PROFILEREGIONSITECODE
		,T.PROFILEREGIONID
		,T.NETWORKORDER
		,T.PPONETWORKID
		,T.SEARCHLOGIC
		,T.VERIFICATION
		,T.EFFECTIVEDATE
		,T.TERMINATIONDATE
		,T.JURISDICTIONIND
		,T.JURISDICTIONINSURERSEQ
		,T.JURISDICTIONUSEONLY
		,T.PPOSSTINREQ
		,T.PPOSSLICREQ
		,T.DEFAULTEXTENDEDSEARCHES
		,T.DEFAULTEXTENDEDFILTERS
		,T.SEVEREDTIES
		,T.POS
FROM src.PPOProfileNetworks T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPOPROFILESITECODE,
		PPOPROFILEID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		NETWORKORDER,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOProfileNetworks
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPOPROFILESITECODE,
		PPOPROFILEID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		NETWORKORDER,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPOPROFILESITECODE = S.PPOPROFILESITECODE
	AND T.PPOPROFILEID = S.PPOPROFILEID
	AND T.PROFILEREGIONSITECODE = S.PROFILEREGIONSITECODE
	AND T.PROFILEREGIONID = S.PROFILEREGIONID
	AND T.NETWORKORDER = S.NETWORKORDER
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOProfileNetworksHistory(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPOPROFILENETWORKSHISTORYSEQ NUMBER(19,0)
		,RECORDDELETED BOOLEAN
		,LOGDATETIME DATETIME
		,LOGINAME VARCHAR(256)
		,PPOPROFILESITECODE VARCHAR(3)
		,PPOPROFILEID NUMBER(10,0)
		,PROFILEREGIONSITECODE VARCHAR(3)
		,PROFILEREGIONID NUMBER(10,0)
		,NETWORKORDER NUMBER(5,0)
		,PPONETWORKID VARCHAR(2)
		,SEARCHLOGIC VARCHAR(1)
		,VERIFICATION VARCHAR(1)
		,EFFECTIVEDATE DATETIME
		,TERMINATIONDATE DATETIME
		,JURISDICTIONIND VARCHAR(1)
		,JURISDICTIONINSURERSEQ NUMBER(10,0)
		,JURISDICTIONUSEONLY VARCHAR(1)
		,PPOSSTINREQ VARCHAR(1)
		,PPOSSLICREQ VARCHAR(1)
		,DEFAULTEXTENDEDSEARCHES NUMBER(5,0)
		,DEFAULTEXTENDEDFILTERS NUMBER(5,0)
		,SEVEREDTIES VARCHAR(1)
		,POS VARCHAR(500) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPOPROFILENETWORKSHISTORYSEQ
		,T.RECORDDELETED
		,T.LOGDATETIME
		,T.LOGINAME
		,T.PPOPROFILESITECODE
		,T.PPOPROFILEID
		,T.PROFILEREGIONSITECODE
		,T.PROFILEREGIONID
		,T.NETWORKORDER
		,T.PPONETWORKID
		,T.SEARCHLOGIC
		,T.VERIFICATION
		,T.EFFECTIVEDATE
		,T.TERMINATIONDATE
		,T.JURISDICTIONIND
		,T.JURISDICTIONINSURERSEQ
		,T.JURISDICTIONUSEONLY
		,T.PPOSSTINREQ
		,T.PPOSSLICREQ
		,T.DEFAULTEXTENDEDSEARCHES
		,T.DEFAULTEXTENDEDFILTERS
		,T.SEVEREDTIES
		,T.POS
FROM src.PPOProfileNetworksHistory T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPOPROFILENETWORKSHISTORYSEQ,
		PPOPROFILESITECODE,
		PPOPROFILEID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		NETWORKORDER,
		EFFECTIVEDATE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOProfileNetworksHistory
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPOPROFILENETWORKSHISTORYSEQ,
		PPOPROFILESITECODE,
		PPOPROFILEID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		NETWORKORDER,
		EFFECTIVEDATE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPOPROFILENETWORKSHISTORYSEQ = S.PPOPROFILENETWORKSHISTORYSEQ
	AND T.PPOPROFILESITECODE = S.PPOPROFILESITECODE
	AND T.PPOPROFILEID = S.PPOPROFILEID
	AND T.PROFILEREGIONSITECODE = S.PROFILEREGIONSITECODE
	AND T.PROFILEREGIONID = S.PROFILEREGIONID
	AND T.NETWORKORDER = S.NETWORKORDER
	AND T.EFFECTIVEDATE = S.EFFECTIVEDATE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPORateType(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,RATETYPECODE VARCHAR(8)
		,PPONETWORKID VARCHAR(2)
		,CATEGORY VARCHAR(1)
		,PRIORITY VARCHAR(1)
		,VBCOLOR NUMBER(5,0)
		,RATETYPEDESCRIPTION VARCHAR(70)
		,EXPLANATION VARCHAR(6000) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.RATETYPECODE
		,T.PPONETWORKID
		,T.CATEGORY
		,T.PRIORITY
		,T.VBCOLOR
		,T.RATETYPEDESCRIPTION
		,T.EXPLANATION
FROM src.PPORateType T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		RATETYPECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPORateType
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		RATETYPECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.RATETYPECODE = S.RATETYPECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_PPOSubNetwork(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PPONETWORKID VARCHAR(2)
		,GROUPCODE VARCHAR(3)
		,GROUPNAME VARCHAR(40)
		,EXTERNALID VARCHAR(30)
		,SITECODE VARCHAR(3)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2)
		,STREET1 VARCHAR(30)
		,STREET2 VARCHAR(30)
		,CITY VARCHAR(15)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(10)
		,PHONENUM VARCHAR(20)
		,EMAILADDRESS VARCHAR(255)
		,WEBSITE VARCHAR(255)
		,TIN VARCHAR(9)
		,COMMENT VARCHAR(4000) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PPONETWORKID
		,T.GROUPCODE
		,T.GROUPNAME
		,T.EXTERNALID
		,T.SITECODE
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
		,T.STREET1
		,T.STREET2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.EMAILADDRESS
		,T.WEBSITE
		,T.TIN
		,T.COMMENT
FROM src.PPOSubNetwork T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PPONETWORKID,
		GROUPCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.PPOSubNetwork
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PPONETWORKID,
		GROUPCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PPONETWORKID = S.PPONETWORKID
	AND T.GROUPCODE = S.GROUPCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProfileRegion(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,SITECODE VARCHAR(3)
		,PROFILEREGIONID NUMBER(10,0)
		,REGIONTYPECODE VARCHAR(2)
		,REGIONNAME VARCHAR(50) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.SITECODE
		,T.PROFILEREGIONID
		,T.REGIONTYPECODE
		,T.REGIONNAME
FROM src.ProfileRegion T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		SITECODE,
		PROFILEREGIONID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProfileRegion
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		SITECODE,
		PROFILEREGIONID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.SITECODE = S.SITECODE
	AND T.PROFILEREGIONID = S.PROFILEREGIONID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProfileRegionDetail(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PROFILEREGIONSITECODE VARCHAR(3)
		,PROFILEREGIONID NUMBER(10,0)
		,ZIPCODEFROM VARCHAR(5)
		,ZIPCODETO VARCHAR(5) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PROFILEREGIONSITECODE
		,T.PROFILEREGIONID
		,T.ZIPCODEFROM
		,T.ZIPCODETO
FROM src.ProfileRegionDetail T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		ZIPCODEFROM,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProfileRegionDetail
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PROFILEREGIONSITECODE,
		PROFILEREGIONID,
		ZIPCODEFROM) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PROFILEREGIONSITECODE = S.PROFILEREGIONSITECODE
	AND T.PROFILEREGIONID = S.PROFILEREGIONID
	AND T.ZIPCODEFROM = S.ZIPCODEFROM
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Provider(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PROVIDERSUBSET VARCHAR(4)
		,PROVIDERSEQ NUMBER(19,0)
		,TIN VARCHAR(9)
		,TINSUFFIX VARCHAR(6)
		,EXTERNALID VARCHAR(30)
		,NAME VARCHAR(50)
		,GROUPCODE VARCHAR(5)
		,LICENSENUM VARCHAR(30)
		,MEDICARENUM VARCHAR(20)
		,PRACTICEADDRESSSEQ NUMBER(10,0)
		,BILLINGADDRESSSEQ NUMBER(10,0)
		,HOSPITALSEQ NUMBER(10,0)
		,PROVTYPE VARCHAR(3)
		,SPECIALTY1 VARCHAR(8)
		,SPECIALTY2 VARCHAR(8)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,STATUS VARCHAR(1)
		,EXTERNALSTATUS VARCHAR(1)
		,EXPORTDATE DATETIME
		,SSNTININDICATOR VARCHAR(1)
		,PMTDAYS NUMBER(5,0)
		,AUTHBEGINDATE DATETIME
		,AUTHENDDATE DATETIME
		,TAXADDRESSSEQ NUMBER(10,0)
		,CTRLNUM1099 VARCHAR(4)
		,SURCHARGECODE VARCHAR(1)
		,WORKCOMPNUM VARCHAR(18)
		,WORKCOMPSTATE VARCHAR(2)
		,NCPDPID VARCHAR(10)
		,ENTITYTYPE VARCHAR(1)
		,LASTNAME VARCHAR(35)
		,FIRSTNAME VARCHAR(25)
		,MIDDLENAME VARCHAR(25)
		,SUFFIX VARCHAR(10)
		,NPI VARCHAR(10)
		,FACILITYNPI VARCHAR(10)
		,VERIFICATIONGROUPID VARCHAR(30) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PROVIDERSUBSET
		,T.PROVIDERSEQ
		,T.TIN
		,T.TINSUFFIX
		,T.EXTERNALID
		,T.NAME
		,T.GROUPCODE
		,T.LICENSENUM
		,T.MEDICARENUM
		,T.PRACTICEADDRESSSEQ
		,T.BILLINGADDRESSSEQ
		,T.HOSPITALSEQ
		,T.PROVTYPE
		,T.SPECIALTY1
		,T.SPECIALTY2
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.STATUS
		,T.EXTERNALSTATUS
		,T.EXPORTDATE
		,T.SSNTININDICATOR
		,T.PMTDAYS
		,T.AUTHBEGINDATE
		,T.AUTHENDDATE
		,T.TAXADDRESSSEQ
		,T.CTRLNUM1099
		,T.SURCHARGECODE
		,T.WORKCOMPNUM
		,T.WORKCOMPSTATE
		,T.NCPDPID
		,T.ENTITYTYPE
		,T.LASTNAME
		,T.FIRSTNAME
		,T.MIDDLENAME
		,T.SUFFIX
		,T.NPI
		,T.FACILITYNPI
		,T.VERIFICATIONGROUPID
FROM src.Provider T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Provider
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PROVIDERSUBSET = S.PROVIDERSUBSET
	AND T.PROVIDERSEQ = S.PROVIDERSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProviderAddress(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PROVIDERSUBSET VARCHAR(4)
		,PROVIDERADDRESSSEQ NUMBER(10,0)
		,RECTYPE VARCHAR(2)
		,ADDRESS1 VARCHAR(30)
		,ADDRESS2 VARCHAR(30)
		,CITY VARCHAR(30)
		,STATE VARCHAR(2)
		,ZIP VARCHAR(9)
		,PHONENUM VARCHAR(20)
		,FAXNUM VARCHAR(20)
		,CONTACTFIRSTNAME VARCHAR(20)
		,CONTACTLASTNAME VARCHAR(20)
		,CONTACTMIDDLEINITIAL VARCHAR(1)
		,URFIRSTNAME VARCHAR(20)
		,URLASTNAME VARCHAR(20)
		,URMIDDLEINITIAL VARCHAR(1)
		,FACILITYNAME VARCHAR(30)
		,COUNTRYCODE VARCHAR(3)
		,MAILCODE VARCHAR(20) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PROVIDERSUBSET
		,T.PROVIDERADDRESSSEQ
		,T.RECTYPE
		,T.ADDRESS1
		,T.ADDRESS2
		,T.CITY
		,T.STATE
		,T.ZIP
		,T.PHONENUM
		,T.FAXNUM
		,T.CONTACTFIRSTNAME
		,T.CONTACTLASTNAME
		,T.CONTACTMIDDLEINITIAL
		,T.URFIRSTNAME
		,T.URLASTNAME
		,T.URMIDDLEINITIAL
		,T.FACILITYNAME
		,T.COUNTRYCODE
		,T.MAILCODE
FROM src.ProviderAddress T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERADDRESSSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProviderAddress
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERADDRESSSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PROVIDERSUBSET = S.PROVIDERSUBSET
	AND T.PROVIDERADDRESSSEQ = S.PROVIDERADDRESSSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProviderCluster(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PROVIDERSUBSET VARCHAR(4)
		,PROVIDERSEQ NUMBER(19,0)
		,ORGODSCUSTOMERID NUMBER(10,0)
		,MITCHELLPROVIDERKEY VARCHAR(200)
		,PROVIDERCLUSTERKEY VARCHAR(200)
		,PROVIDERTYPE VARCHAR(30) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PROVIDERSUBSET
		,T.PROVIDERSEQ
		,T.ORGODSCUSTOMERID
		,T.MITCHELLPROVIDERKEY
		,T.PROVIDERCLUSTERKEY
		,T.PROVIDERTYPE
FROM src.ProviderCluster T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERSEQ,
		ORGODSCUSTOMERID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProviderCluster
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PROVIDERSUBSET,
		PROVIDERSEQ,
		ORGODSCUSTOMERID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PROVIDERSUBSET = S.PROVIDERSUBSET
	AND T.PROVIDERSEQ = S.PROVIDERSEQ
	AND T.ORGODSCUSTOMERID = S.ORGODSCUSTOMERID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProviderSpecialty(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ID VARCHAR
		,DESCRIPTION VARCHAR
		,IMPLEMENTATIONDATE TIMESTAMP_NTZ(0)
		,DEACTIVATIONDATE TIMESTAMP_NTZ(0)
		,DATASOURCE VARCHAR
		,CREATOR VARCHAR(128)
		,CREATEDATE TIMESTAMP_NTZ(0)
		,LASTUPDATER VARCHAR(128)
		,LASTUPDATEDATE TIMESTAMP_NTZ(0)
		,CBRCODE VARCHAR(4) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ID
		,T.DESCRIPTION
		,T.IMPLEMENTATIONDATE
		,T.DEACTIVATIONDATE
		,T.DATASOURCE
		,T.CREATOR
		,T.CREATEDATE
		,T.LASTUPDATER
		,T.LASTUPDATEDATE
		,T.CBRCODE
FROM src.ProviderSpecialty T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProviderSpecialty
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ID = S.ID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ProviderSys(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,PROVIDERSUBSET VARCHAR(4)
		,PROVIDERSUBSETDESC VARCHAR(30)
		,PROVIDERACCESS VARCHAR(1)
		,TAXADDRREQUIRED VARCHAR(1)
		,ALLOWDUMMYPROVIDERS VARCHAR(1)
		,CASCADEUPDATESONIMPORT VARCHAR(1)
		,ROOTEXTIDOVERRIDEDELIMITER VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.PROVIDERSUBSET
		,T.PROVIDERSUBSETDESC
		,T.PROVIDERACCESS
		,T.TAXADDRREQUIRED
		,T.ALLOWDUMMYPROVIDERS
		,T.CASCADEUPDATESONIMPORT
		,T.ROOTEXTIDOVERRIDEDELIMITER
FROM src.ProviderSys T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		PROVIDERSUBSET,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ProviderSys
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		PROVIDERSUBSET) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.PROVIDERSUBSET = S.PROVIDERSUBSET
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ReductionType(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,REDUCTIONCODE NUMBER(5,0)
		,REDUCTIONDESCRIPTION VARCHAR(50)
		,BEOVERRIDE VARCHAR(1)
		,BEMSG VARCHAR(1)
		,ABBREVIATION VARCHAR(8)
		,DEFAULTMESSAGECODE VARCHAR(6)
		,DEFAULTDENIALMESSAGECODE VARCHAR(6) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.REDUCTIONCODE
		,T.REDUCTIONDESCRIPTION
		,T.BEOVERRIDE
		,T.BEMSG
		,T.ABBREVIATION
		,T.DEFAULTMESSAGECODE
		,T.DEFAULTDENIALMESSAGECODE
FROM src.ReductionType T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		REDUCTIONCODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.ReductionType
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		REDUCTIONCODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.REDUCTIONCODE = S.REDUCTIONCODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_Region(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,JURISDICTION VARCHAR(2)
		,EXTENSION VARCHAR(3)
		,ENDZIP VARCHAR(5)
		,BEG VARCHAR(5)
		,REGION NUMBER(5,0)
		,REGIONDESCRIPTION VARCHAR(4) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.JURISDICTION
		,T.EXTENSION
		,T.ENDZIP
		,T.BEG
		,T.REGION
		,T.REGIONDESCRIPTION
FROM src.Region T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		ENDZIP,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.Region
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		JURISDICTION,
		EXTENSION,
		ENDZIP) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.JURISDICTION = S.JURISDICTION
	AND T.EXTENSION = S.EXTENSION
	AND T.ENDZIP = S.ENDZIP
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_ServiceCodeGroup(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
	   OdsPostingGroupAuditId NUMBER(10,0)
	 , OdsCustomerId NUMBER(10,0)
	 , OdsCreateDate DATETIME
	 , OdsSnapshotDate DATETIME 
	 , OdsRowIsCurrent INT
	 , OdsHashbytesValue BINARY(8000) 
	 , DmlOperation VARCHAR(1)
	 , SiteCode VARCHAR (3)
	 , GroupType VARCHAR (8) 
	 , Family VARCHAR (8)
	 , Revision VARCHAR (4)
	 , GroupCode VARCHAR (8)
	 , CodeOrder NUMBER (10,0) 
	 , ServiceCode VARCHAR (12)
	 , ServiceCodeType VARCHAR (8) 
	 , LinkGroupType VARCHAR (8) 
	 , LinkGroupFamily VARCHAR (8) 
	 , CodeLevel NUMBER (5,0) 
	 , GlobalPriority NUMBER (10,0) 
	 , Active VARCHAR (1) 
	 , Comment VARCHAR (2000) 
	 , CustomParameters VARCHAR (4000) 
	 , CreateDate DATETIME 
	 , CreateUserID VARCHAR (2) 
	 , ModDate DATETIME 
	 , ModUserID VARCHAR (2) )
AS
$$
SELECT 
	 t.OdsPostingGroupAuditId,
	t.OdsCustomerId,
	t.OdsCreateDate,
	t.OdsSnapshotDate,
	t.OdsRowIsCurrent,
	t.OdsHashbytesValue,
	t.DmlOperation,
	t.SiteCode,
	t.GroupType,
	t.Family,
	t.Revision,
	t.GroupCode,
	t.CodeOrder,
	t.ServiceCode,
	t.ServiceCodeType,
	t.LinkGroupType,
	t.LinkGroupFamily,
	t.CodeLevel,
	t.GlobalPriority,
	t.Active,
	t.Comment,
	t.CustomParameters,
	t.CreateDate,
	t.CreateUserID,
	t.ModDate,
	t.ModUserID
FROM src.ServiceCodeGroup t
INNER JOIN (
	SELECT 
		OdsCustomerId,
		SiteCode,
		GroupType,
		Family,
		Revision,
		GroupCode,
		CodeOrder,
		ServiceCode,
		MAX(OdsPostingGroupAuditId) AS OdsPostingGroupAuditId
	FROM src.ServiceCodeGroup
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY OdsCustomerId,
		SiteCode,
		GroupType,
		Family,
		Revision,
		GroupCode,
		CodeOrder,
		ServiceCode) s
ON t.OdsPostingGroupAuditId = s.OdsPostingGroupAuditId
	AND t.OdsCustomerId = s.OdsCustomerId
	AND t.SiteCode = s.SiteCode
	AND t.GroupType = s.GroupType
	AND t.Family = s.Family
	AND t.Revision = s.Revision
	AND t.GroupCode = s.GroupCode
	AND t.CodeOrder = s.CodeOrder
	AND t.ServiceCode = s.ServiceCode
WHERE t.DmlOperation <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_TableLookUp(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,TABLECODE VARCHAR(4)
		,TYPECODE VARCHAR(4)
		,CODE VARCHAR(12)
		,SITECODE VARCHAR(3)
		,OLDCODE VARCHAR(12)
		,SHORTDESC VARCHAR(40)
		,SOURCE VARCHAR(1)
		,PRIORITY NUMBER(5,0)
		,LONGDESC VARCHAR(6000)
		,OWNERAPP VARCHAR(1)
		,RECORDSTATUS VARCHAR(1)
		,CREATEDATE DATETIME
		,CREATEUSERID VARCHAR(2)
		,MODDATE DATETIME
		,MODUSERID VARCHAR(2) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.TABLECODE
		,T.TYPECODE
		,T.CODE
		,T.SITECODE
		,T.OLDCODE
		,T.SHORTDESC
		,T.SOURCE
		,T.PRIORITY
		,T.LONGDESC
		,T.OWNERAPP
		,T.RECORDSTATUS
		,T.CREATEDATE
		,T.CREATEUSERID
		,T.MODDATE
		,T.MODUSERID
FROM src.TableLookUp T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		TABLECODE,
		TYPECODE,
		CODE,
		SITECODE,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.TableLookUp
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		TABLECODE,
		TYPECODE,
		CODE,
		SITECODE) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.TABLECODE = S.TABLECODE
	AND T.TYPECODE = S.TYPECODE
	AND T.CODE = S.CODE
	AND T.SITECODE = S.SITECODE
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_UserInfo(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,USERID VARCHAR(2)
		,USERPASSWORD VARCHAR(35)
		,NAME VARCHAR(30)
		,SECURITYLEVEL VARCHAR(1)
		,ENABLEADJUSTERMENU VARCHAR(1)
		,ENABLEPROVADDS VARCHAR(1)
		,ALLOWPOSTING VARCHAR(1)
		,ENABLECLAIMADDS VARCHAR(1)
		,ENABLEPOLICYADDS VARCHAR(1)
		,ENABLEINVOICECREDITVOID VARCHAR(1)
		,ENABLEREEVALUATIONS VARCHAR(1)
		,ENABLEPPOACCESS VARCHAR(1)
		,ENABLEURCOMMENTVIEW VARCHAR(1)
		,ENABLEPENDRELEASE VARCHAR(1)
		,ENABLEXTABLEUPDATE VARCHAR(1)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,ENABLEPPOFASTMATCHADDS VARCHAR(1)
		,EXTERNALID VARCHAR(30)
		,EMAILADDRESS VARCHAR(255)
		,EMAILNOTIFY VARCHAR(1)
		,ACTIVESTATUS VARCHAR(1)
		,COMPANYSEQ NUMBER(5,0)
		,NETWORKLOGIN VARCHAR(50)
		,AUTOMATICNETWORKLOGIN VARCHAR(1)
		,LASTLOGGEDINDATE DATETIME
		,PROMPTTOCREATEMCC VARCHAR(1)
		,ACCESSALLWORKQUEUES VARCHAR(1)
		,LANDINGZONEACCESS VARCHAR(1)
		,REVIEWLEVEL NUMBER(3,0)
		,ENABLEUSERMAINTENANCE VARCHAR(1)
		,ENABLEHISTORYMAINTENANCE VARCHAR(1)
		,ENABLECLIENTMAINTENANCE VARCHAR(1)
		,FEEACCESS VARCHAR(1)
		,ENABLESALESTAXMAINTENANCE VARCHAR(1)
		,BESALESTAXZIPCODEACCESS VARCHAR(1)
		,INVOICEGENACCESS VARCHAR(1)
		,BEPERMITALLOWOVER VARCHAR(1)
		,PERMITREREVIEWS VARCHAR(1)
		,EDITBILLCONTROL VARCHAR(1)
		,RESTRICTEORNOTES VARCHAR(1)
		,UWQAUTONEXTBILL VARCHAR(1)
		,UWQDISABLEOPTIONS VARCHAR(1)
		,UWQDISABLERULES VARCHAR(1)
		,PERMITCHECKREISSUE VARCHAR(1)
		,ENABLEEDIAUTOMATIONMAINTENANCE VARCHAR(1)
		,RESTRICTDIARYNOTES VARCHAR(1)
		,RESTRICTEXTERNALDIARYNOTES VARCHAR(1)
		,BEDEFERMANUALMODEMSG VARCHAR(1)
		,USERROLEID NUMBER(10,0)
		,ERASEBILLTEMPHISTORY VARCHAR(1)
		,EDITPPOPROFILE VARCHAR(1)
		,ENABLEURACCESS VARCHAR(1)
		,CAPSTONECONFIGURATIONACCESS VARCHAR(1)
		,PERMITUDFDEFINITION VARCHAR(1)
		,ENABLEPPOPROFILEEDIT VARCHAR(1)
		,ENABLESUPERVISORROLE VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.USERID
		,T.USERPASSWORD
		,T.NAME
		,T.SECURITYLEVEL
		,T.ENABLEADJUSTERMENU
		,T.ENABLEPROVADDS
		,T.ALLOWPOSTING
		,T.ENABLECLAIMADDS
		,T.ENABLEPOLICYADDS
		,T.ENABLEINVOICECREDITVOID
		,T.ENABLEREEVALUATIONS
		,T.ENABLEPPOACCESS
		,T.ENABLEURCOMMENTVIEW
		,T.ENABLEPENDRELEASE
		,T.ENABLEXTABLEUPDATE
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.ENABLEPPOFASTMATCHADDS
		,T.EXTERNALID
		,T.EMAILADDRESS
		,T.EMAILNOTIFY
		,T.ACTIVESTATUS
		,T.COMPANYSEQ
		,T.NETWORKLOGIN
		,T.AUTOMATICNETWORKLOGIN
		,T.LASTLOGGEDINDATE
		,T.PROMPTTOCREATEMCC
		,T.ACCESSALLWORKQUEUES
		,T.LANDINGZONEACCESS
		,T.REVIEWLEVEL
		,T.ENABLEUSERMAINTENANCE
		,T.ENABLEHISTORYMAINTENANCE
		,T.ENABLECLIENTMAINTENANCE
		,T.FEEACCESS
		,T.ENABLESALESTAXMAINTENANCE
		,T.BESALESTAXZIPCODEACCESS
		,T.INVOICEGENACCESS
		,T.BEPERMITALLOWOVER
		,T.PERMITREREVIEWS
		,T.EDITBILLCONTROL
		,T.RESTRICTEORNOTES
		,T.UWQAUTONEXTBILL
		,T.UWQDISABLEOPTIONS
		,T.UWQDISABLERULES
		,T.PERMITCHECKREISSUE
		,T.ENABLEEDIAUTOMATIONMAINTENANCE
		,T.RESTRICTDIARYNOTES
		,T.RESTRICTEXTERNALDIARYNOTES
		,T.BEDEFERMANUALMODEMSG
		,T.USERROLEID
		,T.ERASEBILLTEMPHISTORY
		,T.EDITPPOPROFILE
		,T.ENABLEURACCESS
		,T.CAPSTONECONFIGURATIONACCESS
		,T.PERMITUDFDEFINITION
		,T.ENABLEPPOPROFILEEDIT
		,T.ENABLESUPERVISORROLE
FROM src.UserInfo T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		USERID,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.UserInfo
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		USERID) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.USERID = S.USERID
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_WFlow(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,WFLOWSEQ NUMBER(10,0)
		,DESCRIPTION VARCHAR(50)
		,RECORDSTATUS VARCHAR(1)
		,ENTITYTYPECODE VARCHAR(2)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,INITIALTASKSEQ NUMBER(10,0)
		,PAUSETASKSEQ NUMBER(10,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.WFLOWSEQ
		,T.DESCRIPTION
		,T.RECORDSTATUS
		,T.ENTITYTYPECODE
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.INITIALTASKSEQ
		,T.PAUSETASKSEQ
FROM src.WFlow T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		WFLOWSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.WFlow
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		WFLOWSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.WFLOWSEQ = S.WFLOWSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_WFQueue(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,ENTITYTYPECODE VARCHAR(2)
		,ENTITYSUBSET VARCHAR(4)
		,ENTITYSEQ NUMBER(19,0)
		,WFTASKSEQ NUMBER(10,0)
		,PRIORWFTASKSEQ NUMBER(10,0)
		,STATUS VARCHAR(1)
		,PRIORITY VARCHAR(1)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,TASKMESSAGE VARCHAR(500)
		,PARAMETER1 VARCHAR(35)
		,CONTEXTID VARCHAR(256)
		,PRIORSTATUS VARCHAR(1) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.ENTITYTYPECODE
		,T.ENTITYSUBSET
		,T.ENTITYSEQ
		,T.WFTASKSEQ
		,T.PRIORWFTASKSEQ
		,T.STATUS
		,T.PRIORITY
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.TASKMESSAGE
		,T.PARAMETER1
		,T.CONTEXTID
		,T.PRIORSTATUS
FROM src.WFQueue T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		ENTITYTYPECODE,
		ENTITYSUBSET,
		ENTITYSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.WFQueue
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		ENTITYTYPECODE,
		ENTITYSUBSET,
		ENTITYSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.ENTITYTYPECODE = S.ENTITYTYPECODE
	AND T.ENTITYSUBSET = S.ENTITYSUBSET
	AND T.ENTITYSEQ = S.ENTITYSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_WFTask(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,WFTASKSEQ NUMBER(10,0)
		,WFLOWSEQ NUMBER(10,0)
		,WFTASKREGISTRYSEQ NUMBER(10,0)
		,NAME VARCHAR(35)
		,PARAMETER1 VARCHAR(35)
		,RECORDSTATUS VARCHAR(1)
		,NODELEFT NUMBER(8,2)
		,NODETOP NUMBER(8,2)
		,CREATEUSERID VARCHAR(2)
		,CREATEDATE DATETIME
		,MODUSERID VARCHAR(2)
		,MODDATE DATETIME
		,NOPRIOR VARCHAR(1)
		,NORESTART VARCHAR(1)
		,PARAMETERX VARCHAR(2000)
		,DEFAULTPENDGROUP VARCHAR(12)
		,CONFIGURATION VARCHAR(2000) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.WFTASKSEQ
		,T.WFLOWSEQ
		,T.WFTASKREGISTRYSEQ
		,T.NAME
		,T.PARAMETER1
		,T.RECORDSTATUS
		,T.NODELEFT
		,T.NODETOP
		,T.CREATEUSERID
		,T.CREATEDATE
		,T.MODUSERID
		,T.MODDATE
		,T.NOPRIOR
		,T.NORESTART
		,T.PARAMETERX
		,T.DEFAULTPENDGROUP
		,T.CONFIGURATION
FROM src.WFTask T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		WFTASKSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.WFTask
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		WFTASKSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.WFTASKSEQ = S.WFTASKSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_WFTaskLink(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,FROMTASKSEQ NUMBER(10,0)
		,LINKWHEN NUMBER(5,0)
		,TOTASKSEQ NUMBER(10,0) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.FROMTASKSEQ
		,T.LINKWHEN
		,T.TOTASKSEQ
FROM src.WFTaskLink T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		FROMTASKSEQ,
		LINKWHEN,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.WFTaskLink
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		FROMTASKSEQ,
		LINKWHEN) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.FROMTASKSEQ = S.FROMTASKSEQ
	AND T.LINKWHEN = S.LINKWHEN
WHERE T.DMLOPERATION <> 'D'

$$;


CREATE OR REPLACE FUNCTION dbo.if_WFTaskRegistry(
		IF_ODSPOSTINGGROUPAUDITID INT
)
RETURNS TABLE  (
		 ODSPOSTINGGROUPAUDITID NUMBER(10,0)
		,ODSCUSTOMERID NUMBER(10,0)
		,ODSCREATEDATE DATETIME
		,ODSSNAPSHOTDATE DATETIME
		,ODSROWISCURRENT INT
		,ODSHASHBYTESVALUE BINARY(8000)
		,DMLOPERATION VARCHAR(1)
		,WFTASKREGISTRYSEQ NUMBER(10,0)
		,ENTITYTYPECODE VARCHAR(2)
		,DESCRIPTION VARCHAR(50)
		,ACTION VARCHAR(50)
		,SMALLIMAGERESID NUMBER(10,0)
		,LARGEIMAGERESID NUMBER(10,0)
		,PERSISTBEFORE VARCHAR(1)
		,NACTION VARCHAR(512) )
AS
$$
SELECT T.ODSPOSTINGGROUPAUDITID
		,T.ODSCUSTOMERID
		,T.ODSCREATEDATE
		,T.ODSSNAPSHOTDATE
		,T.ODSROWISCURRENT
		,T.ODSHASHBYTESVALUE
		,T.DMLOPERATION
		,T.WFTASKREGISTRYSEQ
		,T.ENTITYTYPECODE
		,T.DESCRIPTION
		,T.ACTION
		,T.SMALLIMAGERESID
		,T.LARGEIMAGERESID
		,T.PERSISTBEFORE
		,T.NACTION
FROM src.WFTaskRegistry T
INNER JOIN (
	SELECT 
		ODSCUSTOMERID,
		WFTASKREGISTRYSEQ,
		MAX(ODSPOSTINGGROUPAUDITID) AS ODSPOSTINGGROUPAUDITID
	FROM src.WFTaskRegistry
	WHERE ODSPOSTINGGROUPAUDITID <= IF_ODSPOSTINGGROUPAUDITID
	GROUP BY ODSCUSTOMERID,
		WFTASKREGISTRYSEQ) S
ON T.ODSPOSTINGGROUPAUDITID = S.ODSPOSTINGGROUPAUDITID
	AND T.ODSCUSTOMERID = S.ODSCUSTOMERID
	AND T.WFTASKREGISTRYSEQ = S.WFTASKREGISTRYSEQ
WHERE T.DMLOPERATION <> 'D'

$$;


